(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    257994,       5001]
NotebookOptionsPosition[    256537,       4969]
NotebookOutlinePosition[    256930,       4985]
CellTagsIndexPosition[    256887,       4982]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "+", "b", "+", "c", "+", "d", "+", "e"}], " ", "==", " ", 
      "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"2", "a"}]}], "-", "b", "+", "d", "+", 
       RowBox[{"2", "e"}]}], "==", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "a"}], "+", 
       RowBox[{"b", "/", "2"}], "+", 
       RowBox[{"d", "/", "2"}], "+", 
       RowBox[{"2", "e"}]}], "==", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], "/", "3"}], "a"}], "-", 
       RowBox[{
        RowBox[{"1", "/", "6"}], "b"}], "+", 
       RowBox[{
        RowBox[{"1", "/", "6"}], "d"}], "+", 
       RowBox[{
        RowBox[{"4", "/", "3"}], "e"}]}], "==", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"2", "/", "3"}], "a"}], "+", 
       RowBox[{
        RowBox[{"1", "/", "24"}], "b"}], "+", 
       RowBox[{
        RowBox[{"1", "/", "24"}], "d"}], "+", 
       RowBox[{
        RowBox[{"2", "/", "3"}], "e"}]}], "==", "0"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->"In[73]:=",ExpressionUUID->"55d9bb23-deca-47d4-aa4f-1053c2186a9a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", 
     FractionBox["1", "12"]}], ",", 
    RowBox[{"b", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["2", "3"]}]}], ",", 
    RowBox[{"c", "\[Rule]", "0"}], ",", 
    RowBox[{"d", "\[Rule]", 
     FractionBox["2", "3"]}], ",", 
    RowBox[{"e", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["1", "12"]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8864895395214653`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"481309dc-af79-4e50-88b3-01533a681a45"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.886675974480177*^9, 3.886675990268265*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"76c3a08d-9384-4c7d-ac6a-d75b82367a55"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<outputs/uloha1_50.csv\>\"", ",", " ", "\"\<CSV\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n50plot", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red", ",", " ", "Green"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Actual\>\"", ",", " ", "\"\<Central\>\"", ",", 
        "\"\<My derivative\>\""}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<f(x)\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<outputs/uloha1_100.csv\>\"", ",", " ", "\"\<CSV\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n100plot", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red", ",", " ", "Green"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Actual\>\"", ",", " ", "\"\<Central\>\"", ",", 
        "\"\<My derivative\>\""}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<f(x)\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<outputs/uloha1_200.csv\>\"", ",", " ", "\"\<CSV\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n200plot", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red", ",", " ", "Green"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Actual\>\"", ",", " ", "\"\<Central\>\"", ",", 
        "\"\<My derivative\>\""}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<f(x)\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<outputs/uloha1_300.csv\>\"", ",", " ", "\"\<CSV\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n300plot", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red", ",", " ", "Green"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Actual\>\"", ",", " ", "\"\<Central\>\"", ",", 
        "\"\<My derivative\>\""}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<f(x)\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<outputs/uloha1_500.csv\>\"", ",", " ", "\"\<CSV\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n500plot", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red", ",", " ", "Green"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Actual\>\"", ",", " ", "\"\<Central\>\"", ",", 
        "\"\<My derivative\>\""}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<f(x)\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "n50plot", ",", "n100plot", ",", "n200plot", ",", "n300plot", ",", " ", 
    "n500plot"}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.886676017027318*^9, 3.8866760870559397`*^9}, 
   3.8866761251752234`*^9, {3.886676326107039*^9, 3.886676337461011*^9}, {
   3.886676450273686*^9, 3.886676487725493*^9}, {3.886676659841775*^9, 
   3.886676841278851*^9}, {3.886677015041148*^9, 3.886677155400687*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"4ddcace0-83e6-4c97-8524-c11d238fb057"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{}, {{}, {}, {
         RGBColor[0, 0, 1], 
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ4+ZKtwHhI9YG97/ftDBcVZ9oeb067vFb1gP/vE
GVa9/p32u3f+uD1P4YZ9oL98o/2fU/Y3y10/7Bd9YH8xVijd9coV+6uT+ooM
pJ/YZwntUezlugFV/8K+LUw9XePdOfvtVxzj+NXe2OecO2i80PPCfoj+D/ZH
j+3ps3jyZb9P9y+VcolP9jMOSkzUmMJ+4JSEfJq+9Bf7xWvu+/hsFzrgscx5
+XPZb/YJckZPnRVEDkDM/2F/bMn+6Yea/+23dJeVDVf+ZZ+2cO5lnQBhB4h9
f+zdLszwvBKs5GCalDb/uMY/+4unNaZFz/plf2UXb9Z+UQYHi9apXFpG6gcm
My7okhZndHCrqBZg2sR1IMjDaHW5BJPDK9upl+dt0nPgvtTjelmS2eFR+JqH
SubyUPexOCSU7/p85LDsgc74jW3dMqwOVYG741l5jBwg7mVzaG87uiJ7q9mB
+3cMLv8VYXfYpaNmJq9u7gAAH4ir8A==
          "]], 
         LineBox[{{3.147172512748201, 23.15282}, {3.267256, -7.937702}, {
          3.383883464397911, -23.318243999999996`}}], 
         LineBox[{{3.651972544836678, 23.15282}, {3.769911, -16.565226}, {
          3.8040293116151407`, -23.318243999999996`}}], 
         LineBox[{{4.376290175121409, -23.318243999999996`}, {
          4.39823, -17.845792}, {4.4760366877901605`, 23.15282}}], 
         LineBox[{{5.380118705642231, -23.318243999999996`}, {
          5.403539, -10.781563}, {5.448193438957838, 23.15282}}], 
         LineBox[{{2.8948715157760674`, 23.15282}, {
          3.0071597663001635`, -23.318243999999996`}}], 
         LineBox[{{3.0247768077839576`, -23.318243999999996`}, {
          3.13807118344333, 23.15282}}], 
         LineBox[{{3.395613850412853, -23.318243999999996`}, {
          3.500660770100185, 23.15282}}], 
         LineBox[{{4.6648942225004255`, 23.15282}, {
          4.720985561273676, -23.318243999999996`}}], 
         LineBox[{{4.82045494354612, -23.318243999999996`}, {
          4.867236762059632, 23.15282}}], 
         LineBox[{{4.939351870897736, 23.15282}, {
          4.992833131233265, -23.318243999999996`}}], 
         LineBox[{{5.0562700800394005`, -23.318243999999996`}, {
          5.10341765493576, 23.15282}}], 
         LineBox[{{5.192693690765803, 23.15282}, {
          5.23180915680596, -23.318243999999996`}}], 
         LineBox[{{6.095192465140321, 23.15282}, {
          6.1372118528178605`, -23.318243999999996`}}]}, {
         RGBColor[1, 0, 0], 
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJw1kXlQjHEYx9vVtt15q3d3m1q1026JqbbQWDS/ZyXFMEYR4yjtZCVHUdoO
I2mmkbSGZtOlNEnRCNNgquH9kWZXjmjXkSP3bnTosq0o5M0z88zzz3N8v59H
IEuM2M40MzML/JtT9X/kZdyulaRno8FdQqs7JEYRsbsFGmkVas2RP79JPkas
xPBqpncLamkyvarweIG+Lc5VH+LcR12K0EGKfIcWPWT22/vo0NNTyv1i10+o
y7q0aKPLs+n+HrR+VyznpUSNbuik0Q5efSg8f16uRPqMoucHkVq3tYuVY6RW
5Y8LFbxhJB2RKFpusXE7z13u7zqKPnjKVgqfEDj8fEitgW9EqrK6mqY2AtP7
TSgOjBljYaOUJIzP3+A5jvac6E5y7yKAvvcLXQgQ6E8luMECmbxSPXsSMbdH
Ngw2vEO6ZrsEijSDOrfCtglvd1zIOHvMlcsApNRr2v2HqYjwwHoFjwmq5Q/6
Ror5YNN5PFTrMgPyRJ8Hkg/aTeszh83RTd1BhSYqL+Zqbr4bC9jpwcXOby2B
1msB5j1jE2UbflMMcYU0xJ0NHv1Zh68lNFI4VSyr9LCE1MRQ2ZFNDMi6eefI
T4EVCCyajSydFab9WMNHzkhyiPYDMhVcDm4U2sCBNMuPtQLetD9byGVezyE2
c3FSdLkpwdsOFpIXxNe3cbF/jZ+LerY9LN0iydwx34gGerHEc44DlFcrlfVX
bSCqxOcSRc4E/FVz8hE2onndURl7imbCiQirNT3XTBTNg4Cm9wqtb6YtHhZ+
Kb13moB1+6YU6amOnZx4Bc8RRIa7s17ucAO/gpg0UYkjpKgGGhpvs0B5pe6o
1sUJAvrEXhN8Lu7XDhVnlzrBv3+3mgPNzxkuZuuTB4yfkc+S+NQ3Zc6woIP4
4SciMM2TBEPQ++gSAwfk57ojJWdI+O70aK9vIRva1N5xBj4HsFDlo8ckFvUm
pagqOMAITOk722mPad5csMcWy47O7UCxkYa1Q5VcgNdP6zXFBND8eRC8olk+
XOAEHqXp+1dX8WDSxpwRGOeM/wDq1mUa
          "]]}, {
         RGBColor[0, 1, 0], 
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdkH0s1HEcxx1FJd2d83M/HZ3TiSREaiLfj9Fc08Ow0FqMuDzksXK00dMo
eUxJpyIhGk0qrAf9vpFuUUN+lWbpYV2YHi6P16HSfv7qs3322T77PLzfL1FY
vF+EtpaWluNc/qv/hypGvLiVwAglFFlxkktQ20npmxaiG02Mum6XPryHHtxT
95ea96GROuO+fRad6K1si4oiPqBT64Z/VKlo9KowL8lB8BkFCdlpsjV98/ND
yIPdGEsu7ELNtEcwe9VXlHeu9aFC3k0x+yqU0hNYILWdoLZla8QychTNakQb
gvr0cAcplNoLxtFzg8xNdd2GWHLds3rQbBJ1tJNBio88zNxXo3DX9ztz+dOU
i7eZWeBKDZrKzxjiDPGA+TeDOLsrs2QSETiHScsU1r8RCzfs71IOI/q+QTRF
aEHERidNT4EYn2NdPSPgs8BHm6ZvO09RfhLHWhmpDTHWjfyeAEvQf5mzpddE
B9oFcu/fBfx5fQtghxfVlL7pD5UV0pCZbboQJrxJXdthQ2D06kJifhV7r2oR
ZjmUengK9eCsl31FUNxjCic7hJWZL4L+A3VP3LL14WhL64lp0WK4fEBHdnUZ
DzN+loCidHPxja00UufWb74j1oeafCxMfy2a97cUCt1vXkNeQpwQfFkdbWUA
n57FScedTLF9lZ2JwnoZ1MzEpCo1LPg+gl1W2rDhKcH3Vl7gQIB89U2K4ECe
cu/EMZdfyGkg4EjsXL98PKNgzH2aYnhwIbH++Z7DaVw8Kh4ueVbMhaaxWTol
Sk11RRlHykhDWNs4EH/X0wLsckNSLOWGMKnXETvtrg95t2pO95rwwGQOU7+d
CH/r/XnxeAkPfuQ02WS5cYHhZwSVglBfrtUYWu0WmfzukhH4dEpaqi0EmOFJ
wCOjFesfxAlBWjng73KFgP0Sor12KRvaFVbhg2bGsKsiUOe81BRbjiQcKio1
hmbPtjCa4M7z5kOhbnNjxuALFOo/6PuzjA+dERUH05cYAcOfBLkNWURnLQfz
ktSk7eUknH7b2dT7xRT/BS/TYHo=
          "]]}}, {{}, {}}}, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction -> 
      Identity, Frame -> {{False, False}, {False, False}}, FrameLabel -> {{
         FormBox["\"f(x)\"", TraditionalForm], None}, {
         FormBox["\"x\"", TraditionalForm], None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> {698.9470703124987, Automatic}, 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 6.157522}, {-23.318243999999996`, 23.15282}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Actual\"", "\"Central\"", "\"My derivative\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJxdkX8w23cYx4NGED8yZRhZEtMKKtXYj2TD83To2NFVXeU6o61bopeobe6I
cV1Hb3altZZRC435UWurW/24rSvV7wclVurHxDBblVPMSP1qZYr9uOSvPXfP
Pff887yf9+vNS/jgoNSURqPBv/3f/H8tKjws2xzrgMX7rqzFPwMMO4HA4bUJ
Lk8FsxU/2FRxu6BgVurQ7fsttJ+WDbc49kNpVw9d8MUtoNQ3DgtctSAVqfs+
zWiH5lv6MTV3BKLe4WTBxj24qd0bb7fzNwjZFCTdjxmAUWXoIuX4EAbi7BND
tVqQ0OV70p0n4d3RoClfyTAMFeSn+LlOgdz+Nu+c1QgE7tKqptnToNVJTO6M
DRnvz0JOjGciX9cL4rfYbMlLcxCZ1dNbqbxm1JuHpN5W/4rwfuqVBFm5hq+D
3IDwJlnKNGXQX4SOztv5oqlVquTOMMvNaQli558elubQSETeuofSeRlKWp0v
8L9kEObPZ0MHXVZg2SK5OmnJltxz5sh2u65C1fXxiIib9uTMkfqcPLcnoNzf
iM1VDiSsJvibGfZTOPqi8FEw14EwFoY0wZw1mPOIjdtvySKG//XQWU1dbDu9
RWXQ8jbWeX/BpNkbW8yQFaOfdZBVXBrcdWA76s/dCGz0eAb3p0pPJPdw0OBv
A/b1l4Rro90xzVX7icJzEzTauFF6oxsa/G7BQDe/OFa1DrOCM43u3n9DXcrx
CwsBTkTbZCOnHGko+qzIylvoSfwfxGScKKYhdZItSry7kxSafJ3r6mSC+9Iz
WaYNVmTZ4w/VTxdNUOzVk1kWxcODYcJapbMpzgUWDaobBFivyGze8ZUpkt7I
0o8KeGjgZYaTkusT7q9xiPzJ0KEslRnqeBOZp8yERn7b8KiyaeVuO5t4BRxP
+710G57XOyp+tPBFA086ZkQ1H6FbC3E2e71YfImOnqNzKW/TXjDyNcfPczqu
KL5/lVRaH9pTpDbHAs6Szy+Lj8HET703mMPApnBrUx87MR6LnolaKmdgFsOc
FaRdpUiaX0I51wKLbBTeecuvE67q45TICgtk6hgBfiPueKqlLfsZzxK5DWHb
H5eIcPwhs/BqpSVu1GpO1qaKiCEfKwwq3Fx5mXBIiVzmS6+2wu5fa9LfE6Ix
LybWhNi3nM0WEUm9PvLYZSZKH1z780CkAzHkZ42bY1JK5wD4vD43uaXGGktT
O9c6Zt4kH8aX6eWeNjgeLV7wahVjX9YjC5crNvh+au1MteY5svuywEXDt8Wo
0bqahvN+JL9L6ZV61RZr+4Zi5u0Qe9Or5+N32KFA48MKjA0m/wD6n8nA
           "]], 
          LineBox[{{4.280024830782488, -38.712801}, {4.335398, 39.069529}, {
           4.39823, -17.845792}, {4.461062, -14.452969}, {4.5172011183371295`,
            41.678711}}], 
          
          LineBox[{{4.602044570055033, -38.712801}, {4.649557, 35.859542}, {
           4.712389, 26.116525}, {4.7555534821523855`, -38.712801}}], 
          
          LineBox[{{4.794314259110265, -38.712801}, {4.838053, 28.954793}, {
           4.866995417315118, 41.678711}}], 
          
          LineBox[{{5.175362394114088, 41.678711}, {5.215044, -9.003717}, {
           5.24208004598535, -38.712801}}], 
          
          LineBox[{{5.374112473802525, -38.712801}, {5.403539, -10.781563}, {
           5.457761351116883, 41.678711}}], 
          
          LineBox[{{6.093867877264835, 41.678711}, {6.09469, 40.995683}, {
           6.152404748428571, -38.712801}}], 
          
          LineBox[{{3.8975300507730113`, -38.712801}, {3.9552063131831097`, 
           41.678711}}], 
          
          LineBox[{{3.9613705085128914`, 41.678711}, {
           4.014772826334844, -38.712801}}], 
          
          LineBox[{{4.027449138912487, -38.712801}, {4.078736937399901, 
           41.678711}}], 
          
          LineBox[{{4.08924242490742, 41.678711}, {
           4.138985378672514, -38.712801}}], 
          
          LineBox[{{4.154665536157419, -38.712801}, {4.203446601230136, 
           41.678711}}], 
          
          LineBox[{{4.216165306120029, 41.678711}, {
           4.266062882816994, -38.712801}}], 
          
          LineBox[{{4.52767613356646, 41.678711}, {
           4.5731300350423405`, -38.712801}}], 
          
          LineBox[{{4.909448311349832, 41.678711}, {
           4.955654447154812, -38.712801}}], 
          
          LineBox[{{5.0350864607980235`, -38.712801}, {5.084465458919951, 
           41.678711}}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
hb6u6woTf+O6iwUe69zH5hea4f8A+MbHeg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0]], 
          LineBox[CompressedData["
1:eJxdlHs0FHgUxwfJcxhjnmY8I3kMBrVNLb8rKVnKlreaKeRoiqSkmJPoIZRE
8qi0pJY6nZItFZpfpTS1oTyiIrXRVORRMQhbO/PX/s75nd+5/9z7+37v517T
sK2rNyoTCISIH/fn+/8ztNlc4y71CrqfEzfGc01E8hgjOilEVzC3CElLrhPP
mjxEC3K3Xr/JvYTu7Yt8XkdtRtYNEdtmjt1E4uLLwXasVvTb31U5AaJ7qOam
7GWxSQfqkw4nnZx+hKpb3fi6c18ht9Mj0mVBT1FngseQmNqD7Hifj+u0t6JA
VSF3F+MtqjWuFrgGP0dtOVlxDqx3SPvqxvFb2h3Ixba1qM+wD43/yFrZ1abI
L0X+3VmxIUONiLfc0DBwzkfkckuPRt12QVGvH8m2GLL7fZrF88MizzTM+4wq
NtFbvBP6xPL6QwiiXESF0q/igtvPSWz6MLrDelaO0wnYO3PCPIExguxXiq6d
LVDDWs8Oe7Qwv6AtsP9G3KgOfsQwjrRnfUUbzg8Igm+Scbqg8mAm+xvSJL/s
UimjYM/z7n++NxxF7MTMtDE2BasNtDW4G48hR6Nz5GICCcv/L0OVK/MGmSum
xYmEzO8TpuNorYnbcPjhLwo9E+ggO7SJxNcH2ZHLLlXmk+hdyWDMRokxyPV9
R1uuLnNZ6m4GO1mtezZbTqEFwWeNSrexQa53Gq0yogl9to8jqV16lZn1DNrs
dVVneSAdt94iCsVUAvjy5mZOqllip+6AxOgTBBh8GBQ9LZiLc5X+yGDRlUBy
rBE/tNHAI+YfiiT5SqCfTInvczWF1Z6OFxMYylBxIEdSMcCBys1JNRaFyjDk
S5Hql5iA3C8VcA80851SMcbCb23+KUUq0Lx+zfvfOVyFf7MgLzXGflOtAbb6
NWpn18lZ0GTv1SwotwG5n6rglNF7IiDUAaSpEyd4p1VhQehuycxxpsLf2cCP
UN5zhOKMS7X9uXnFs8F5LHuoLlmGlByK3dyN1eDFwjCOK28+bPhRdviMGhwY
sAwXdUyJ8U6HsDMm6pB26OQaid98bFK0O86nRB3CPYjnNziYQHLd3dRJUw14
RP8re286F173aOVWlGrA9DD/mmMdF8v7owllq/uj2B9JuEAYyVEt0wQhdaqk
8LWTol9aUN/88Z12FwcHVsp8NpzTAuujMfs97o+L5f3ThmO265Wr222BJsuI
qTuvDcErl3zQSnfAsfxTMqElEYiGi8vriRbQlNKrziwnwg7z/Jns28rY/pwd
s2GeDvxqT2V9mSDirIcJVvEVOtBAbn/QIWHC50+YN8daF/g/ByqLiX10Nb2e
XtCFXUsuo/QZMgQUWl0SU0lgEbpupcYhFbzP2zGOFkAC9lOXTwacKrGcBxIs
zVAi+xBU4Z+tSan17SRIjWcjP02Kgg89YLsTYvsrDGBJbn1OXKAevDrlNXvv
I6aCFz3wcqvOd56tBqU/10eHHvQmLTNzLiVD0yZaVAKDDKLPsyYv59rg5MlF
sY1BZHj17RlF6S0X7I4IdlkUkkF9e03+JGUO7jbav1fUSYbFrJEm7REznHWl
/FALU1/uR8h8cF3yJNs6RB9c+Z5pab5GeKBluCClSB+u1l40chjjYoO0iXUd
L/Th5aoHMofHtiDnjwILxzmLgm/ZQeIF95iDoRSI3eW2VDhhqeCRAo655XTR
Mi7ufHJ4j/MrChzR4Ob7RX9Bcj6p0G7gNeDhxwHecFvW27VU8PUvSQlqtITI
su41vNNUOMBPJp+p+Y6oC1TWZndRoaug+Er9Phq+32AZ8d6QBm/UV1vtPG6E
44O9t7jyaXD/KDeB84aBLT7F7sgrpoHMqTZ4X4IObhXlifq7aTCm5Bn91nxC
LOebDvzT4TCaKEGVd+6uKBLQ4cd0vBvsJih4p8PRe+unNTv1QK9XK8Szhw7e
9LBvy2+wQM4/A9x7BY9t6MYQq+4vHF3PAMnjoqCei7ognwcG/LdOhXTs45P6
S9kbBsw0jkqJTXb4X2V6wCk=
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, FrameLabel -> {{
          FormBox["\"f(x)\"", TraditionalForm], None}, {
          FormBox["\"x\"", TraditionalForm], None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 6.220353}, {-38.712801, 41.678711}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Actual\"", "\"Central\"", "\"My derivative\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 120], 0.008333333333333333]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1: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
b1SHO7prNuoprsP/A+M1Ot0=
           "]], 
          
          LineBox[{{4.586954006058357, -62.063334499999996`}, {4.618141, 
           32.454249}, {4.649557, 35.859542}, {
           4.67994682410053, -62.063334499999996`}}], 
          
          LineBox[{{4.682108460404653, -62.063334499999996`}, {4.712389, 
           26.116525}, {4.743805, 39.874921}, {
           4.77342297715401, -62.063334499999996`}}], 
          
          LineBox[{{4.777108862162502, -62.063334499999996`}, {4.806637, 
           34.729406}, {4.838053, 28.954793}, {
           4.867140653383284, -62.063334499999996`}}], 
          
          LineBox[{{4.871286609491409, -62.063334499999996`}, {4.900885, 
           56.577545}, {4.9323, -2.89344}, {4.963716, -52.738653}, {
           4.992263905208971, 63.1781015}}], 
          
          LineBox[{{4.998002903635838, 63.1781015}, {5.026548, -52.613848}, {
           5.057964, 1.67378}, {5.08938, 49.679833}, {
           5.117042804392091, -62.063334499999996`}}], 
          
          LineBox[{{5.154544056283434, 63.1781015}, {5.183628, -37.452453}, {
           5.215044, -9.003717}, {5.24646, 51.502965}, {
           5.273999757576201, -62.063334499999996`}}], 
          
          LineBox[{{5.3430083760345735`, -62.063334499999996`}, {5.372123, 
           43.700594}, {5.403539, -10.781563}, {5.434955, -21.949399}, {
           5.466371, 50.00857}, {5.495446975931703, -62.063334499999996`}}], 
          
          LineBox[{{6.0661770161493, -62.063334499999996`}, {6.09469, 
           40.995683}, {6.126106, 0.068201}, {6.157522, -45.780117}, {
           6.183223349976713, 63.1781015}}], 
          
          LineBox[{{5.124004000047821, -62.063334499999996`}, {
           5.150504644363455, 63.1781015}}], 
          
          LineBox[{{5.2809788180200865`, -62.063334499999996`}, {
           5.305289886763471, 63.1781015}}], 
          
          LineBox[{{5.313492071770376, 63.1781015}, {
           5.339005651097609, -62.063334499999996`}}], 
          
          LineBox[{{5.49960575070246, -62.063334499999996`}, {
           5.5248602310559125`, 63.1781015}}], 
          
          LineBox[{{5.533037638074431, 63.1781015}, {
           5.555337187776506, -62.063334499999996`}}], 
          
          LineBox[{{5.565646622720035, -62.063334499999996`}, {
           5.586872996923572, 63.1781015}}], 
          
          LineBox[{{5.597184803442352, 63.1781015}, {
           5.618361012236415, -62.063334499999996`}}], 
          
          LineBox[{{5.62867253310625, -62.063334499999996`}, {
           5.650396018587708, 63.1781015}}], 
          
          LineBox[{{5.659512341635357, 63.1781015}, {
           5.6820830039276755`, -62.063334499999996`}}], 
          
          LineBox[{{5.690645561428588, -62.063334499999996`}, {
           5.714089845432322, 63.1781015}}], 
          
          LineBox[{{5.721405629553032, 63.1781015}, {
           5.745483089885751, -62.063334499999996`}}], 
          
          LineBox[{{5.7527728907557405`, -62.063334499999996`}, {
           5.77702258769269, 63.1781015}}], 
          
          LineBox[{{5.783980766317074, 63.1781015}, {
           5.807838821788594, -62.063334499999996`}}], 
          
          LineBox[{{5.815897126408014, -62.063334499999996`}, {
           5.838848697575687, 63.1781015}}], 
          
          LineBox[{{5.847632797976254, 63.1781015}, {
           5.869351157279339, -62.063334499999996`}}], 
          
          LineBox[{{5.879878865617254, -62.063334499999996`}, {
           5.900292656459303, 63.1781015}}], 
          
          LineBox[{{5.911772898477442, 63.1781015}, {
           5.931071294827721, -62.063334499999996`}}], 
          
          LineBox[{{5.94391963531357, -62.063334499999996`}, {
           5.9625419527141466`, 63.1781015}}], 
          
          LineBox[{{5.9755292649201435`, 63.1781015}, {
           5.994206775762352, -62.063334499999996`}}], 
          
          LineBox[{{6.007107154388996, -62.063334499999996`}, {
           6.027072513872596, 63.1781015}}], 
          
          LineBox[{{6.037547650839176, 63.1781015}, {
           6.061285244328335, -62.063334499999996`}}], 
          
          LineBox[{{6.192730293143973, 63.1781015}, {
           6.212334814462458, -62.063334499999996`}}], 
          
          LineBox[{{6.227499716786951, -62.063334499999996`}, {
           6.244973490741285, 63.1781015}}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 120], 0.008333333333333333]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
Gy0dA/xf1lPFrg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 120], 0.008333333333333333]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0]], 
          LineBox[CompressedData["
1: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
AyogqVk=
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, FrameLabel -> {{
          FormBox["\"f(x)\"", TraditionalForm], None}, {
          FormBox["\"x\"", TraditionalForm], None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 6.251769}, {-62.063334499999996`, 63.1781015}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Actual\"", "\"Central\"", "\"My derivative\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{}, {}, {
         RGBColor[0, 0, 1], 
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
1J4EMWmIpl41KQ2iwP8APjWOLA==
          "]]}, {
         RGBColor[1, 0, 0], 
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
lPgh9D+7AJww
          "]]}, {
         RGBColor[0, 1, 0], 
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdl3c81e0fxu09znAGlZ3Mso6RcX/sk1kpo0TayIgQSVQUjYeWUhoaSlkZ
FencRokQQuJJ8qQQysqq/Oicv37nn/O6X9/v+Y7Pua7rfd0K24LX7+Th4uLS
5ObiWvz+/8+3f7TFPEIvoG23Hn50dLRD7PUdzno3+hGgLFxJyUcEhdyr5XrR
nOPF6Li//SMJu+Oor9BUcqSxFCUINuQe1DjLOR8js3dTn+QV0tHwoWwR8epK
FFnmna6Ib3J+/wJRk/ejLPks1H+zRPyW/Ct0tn+n1GutHM716lCMBonc+qMA
nZi0zdE+1IDeVWoWhaUXo6qju96VU5rQOr/qevN/nqKKU2oe/+1tRt95Uzqr
a8sRvjDUIVTdgtQNvoRXK1Qg1rU8z5VLWhEWktFLiq5C5Vmhna6hbWhH7dLX
ZYMv0LN8xuao2naUHXfwGgp8hcqeTnddk+9AD+WufLb7VYeeVpZ5VUe+R8wg
p1Kt1Ab05HXsh4HGTpSS0E8wIjWhx60W3pIq/6J9fUMZzW7NqPgD30f9Qx9Q
cFmTV1ZqCyr6UuOzqbUbraBOJweVv0XvI21+sCg96I9N06U1ra3I89fd/PUV
PWhygjhd9aYNdcQJ7evb+wmZ9DWfzr/Xjtz5/XUO0HvR8YpfFF33d+hd0utR
kepetGyZu1JZyzvkJqH1KCP4P6Rt3+TTT+xAbWfPhGov+YwuzUa5pop0IHMl
okzFy8/onnudbnXBO8779yHbqC99+XPtyEyzNf3Lsi+I5x1Fr7KrjTOPL8gz
q27qlHUrMmGkLREL/4qWK6SWjK5o4cynH31SuVWnPdKIVptvuqpT34+kZec8
NW1eceY1gDzko9erMDAytlt80kHkFF/fmBmZzZnfICLwvWoqOJrJMlzbkxET
/Q1teuZBV8yqYLHnOYQmEude5axpYhl43pLNbB5C42aLL9LBYs93GHVH3Hzq
rPSJxdi263qN6ghSG/DdEx76hcWe9wiqjoni/rluiKUXoCY/fPg7yupnrpz3
HWWx5/8Dec7s1Lb9PMGSXh2xNingB+qiNYlG5k6z2P/HD0S4WHDzSvkv1qXn
7whLaaOoIX9de3AiF24QuLzj895RJF9Y2J9Rx4PFamurcypH0ZGTFMYlFX7s
eHJWOZI+hnQKZp4YnBfEp5w0EiBoDL1xFrCrFRXBryW9+oSrx9DtbOHMkaNi
WLTllM1b6XGUOaTVFzMqgR3Ol9+5GjyO8s7NPiq6RcDJbiP8u16MI48+yz6f
MiKuo8vtWrVkAoUoN211fUzCIl0uL6dDJlBX4jqC6RkyXpMRp1L5cgI9c89x
nGZI4SSfgsSTSyfRiYRNb5/dksK1Cr1fNoROIsTwLl1TL4WFPpPsZF9NouNZ
CwK5LYWZd62yvi77iSIn1XVXy0vhE3v2CxaE/WT7mkHGNep3dkfX/kTPJ33L
13URseBwW42V3BSqZC0YTJiA7fIEVMXDp9B93VNlFvtFceI+wxPtdVPonnFU
qnAHP2brZxrVtG55z3/0D2v2oJrpnohptJzvwWDf1AiLradpdJX6rF+DWYii
uU7+mlWYQVMmUvyz1uMcfc2gRdVmqfLCzLGhZ6cbZlB3bVZNyZAYsPU2iyYC
K9ZvWUuGA8LOh+SjZlF01aHP7RM0YOtvFvV+jj2eqb0Upk/nmRUqz6F0dLfY
r14O2HqcQ0yqdvxmOwWIJBEXrDqHIj4JfnWVUwS2Pn+hixdU7txwVYSfF0Of
dxz8he4nnK2936AAbL3+Qi1VTYOfY+QhYklrbMCK34hRvDdn1aOlwNbvb6RE
XphoLRUmrzPQn5bfKOuNxJPcJxLA1vMfNPl8tHj3xVm0XzltPiX2Dwq6vTe1
aEk/6/5eD1fP1j/I6NqbuGhXEdy/MqlQUX0e4VwVF08zGlYdfUoeOjyPdmus
mrnuKI/3FA6GFbfNI+GK7OgZG2XcWiruz6JwwdjloetZOivw+BIVmdvABYfX
0tTOl6ti8iHzuhMBXBBTIiHx864q1ut2iw68yAXfl9atpVSpYFcUrL6+ggvO
2x+wzBNUwmE3jncaDHFB89mat2NKS/A57hvJS2jcUHl7evrYQxH8aNuT1VyW
3OAZ5MdQDvqPPZe93JCXdlcoZJAEY8oD6bVp3FCo1BYZu04BSIncDrmV3KDY
Q8hu/bUCdL9Kz50d5gb/Z/vP0R9qwnqm7oNIOg/o3Zl8zJe/Evbdt9/sZcUD
rTEXYobOaEGqyHZRiyAeiNRSkJtYqgYFAQfLll/mgYStG8t/nVGA5vpzASLV
PMDE/WNfCBLwLWT/hZERHqDeyi2eGphnsf3IC9SqNm6CoRzWWLyRNS+8PTa8
Ynu9GsefvGApuKXy5lFt7D/ZtjE+fWFd+K07mUuX41dekO2VK5mY0MbZjwVK
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
Yg==
          "]]}}, {{}, {}}}, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction -> 
      Identity, Frame -> {{False, False}, {False, False}}, FrameLabel -> {{
         FormBox["\"f(x)\"", TraditionalForm], None}, {
         FormBox["\"x\"", TraditionalForm], None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> {799.1778161159566, Automatic}, 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 6.262241}, {-113.286675, 106.785531}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Actual\"", "\"Central\"", "\"My derivative\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJxdmXk4lN/7x+37MjNmzEiyy75Wdue2li1bRGlPSiVLRZFEVJRQFC2fijZb
UZGkOUraJGuoUBFZkp0I39Ez1++Pn39cz/XMNc8557nv9/v1vkd+6z53Py4O
Do4xTg6Ohf///6+R5Dll8PQUOvPr0bXJKl2Ue86AGvY0g33tioTFdE6ucs5C
x863PCpv24qQu02859O7SPu7qV7/yyA0tFtJ8DntPiLJF1wuNzjM/vwDFBp7
XUzjSwz67KpX03G8GB2y4O57f+cUGh8xdd7xtBSNX9l0/hozGZHS7KoHRp+i
uKKh8Ufaaezvw8i8efKbnHwmmn16d1VcYQX6cWTx+5S0/9jf/wIpiXCn+768
gUJ1dDWovZUITn24snn+JoqOfhTQfLwKeQzsXNwXdhf9vF4smiX3GqX+9KO+
08pnP/8N6ppcMdt69j7itqk4reb9DqlmXP4kdasI7fZ7rjM+Wo2UxFrhSctD
FF68ct/jszWo8/SW1bUqJehF7I7mclotuvS6mlf7bCkKo/bcyeqsRUa0u7rF
pKfs9dahautbkQI5z1Chs/qi3UfrEUfI8+N1eRgZTQyUOjk3IAGFxGXDYs8R
8+o9H23pRuRndPVD9OEX7P00on0Oh/KPD1aiP80jb8eLm9CeSJWZnl1V7P19
RANuj5fE9b9Cy8grzMrdm5GEqPsQNeQNKiud+nxVrgW5ucgeQ3/fIsutZRHR
gy3odrjvmsST1ez9tyL+8PrnfrQaFHlpbmBlwid0Rb3DgHL9A9LVPPpMy/sz
ury6qOnH+VpU0mi5UVzlC7KZ1d7z3qsOmR/hmRsa/YK60/r3GtDq0bBo3IeP
FW0Ijj8OmaipZ59XOyrZ1lcwENOA5jcKiWdu6EB7DmZP1+g0otYw2yEm7Suq
20Dxt21sRDLVKvh+5FcUqJ8j0hnYxD7Pr4h5KbBVfq4JPdn5Ovy8wze07nHe
8x3RH9nn+w3J8z2Z4B37iNbyBuiFM76jda0WXVprm9ElH0fOXUe/ows/+vX/
3m5G7fmadT7d3xGraFMOdTWzz78TBVCeyp8RakERDjWnzB92opV5L29zMFpQ
U2pSiK501//dl+rZZyUf04VOCTW9f9nRjHxN3SiU3i50vXS1olZaMyqOJc/w
uP5AK7nDhZVUm9nv6weqCQ6UGEz7iMw1GzO7ZbpR4+Bazmefm9CF/edjW493
IwP333cvTzSiT68PeLzt70bnEvXuJ3U2IBmZtYpl7j0oL3nkXMB/9SjMjy5S
UNqD9NfyNfEtrWO/358o3mupv+pgDaJxlVamnPiJLMmJjIOMd8jbK/N8zOBP
5FqpEC9TVYUu5URsD/XsRZJxG6jmQxXs99+LKC4HDbJkS5HxyoUn9iHnY9U1
N8Jy2PXQh+KrJCwvn7BGHzufNZkM96HXyklmJJ88ppTRtZsa3v0oikvVLr26
nBkavTlpCbMfCfdXlSlue8Uk6mUA7ampMLhuX8ucVlXU5jgzgJq4u+U9LJqY
a4I7JUdHBxD/o45Pp1I/MS+8rOzuXPcLyQnXyQcpfWV+lrpV3FjxC+mSeF7X
6nUyl2/d8d8r1UGUYGb/ZEdIN5Oor0H0iGHmNNPdy6yf4/fOnRhEvVsbHOST
fzFpHr1LL2/4jTRLHi6ilAwxfW6/nTxd+RuduRBIicUjTKL+htDLqqdJRl1j
zBn5Fd5G9kNI7F/BTTKJehxCbrrbhD6G/2E6DMUvU78/hARSw8T8fs4wd2eG
Xb7ROYT6qs2VIvfNMS8+ayYtpg+j9QMTPn7xHJio12E0pP/CzqeDE3+hlH4V
iRpGzLGJnhuW3FjQUMozvnAY7RxwXLEkjwerfxMsn+saRieycveHyfBhp8Rp
pTDGCLpYwUhRPc+PD91blzHkOII+02uFw8QEMVHfI0j/4HPHoAQh/JTbbNe3
ohHEX/IorodXBLN237auewTpimnLhEaJYuH607YNUqNoRCAwe8+wGCbqfxT9
Ej//eUKLhNdda5N/GT2K/BhhsTvbSJjoh1E0oWi73TuOjO8Eas8V94yi728C
d4wpUvBbhuwOHekxlJXX4eRUQsEDz8Vrbq8eQ39G91a4m0tgol/GUORWlqI8
kMAmKZtzMh6NIdMfdWfuM6jY/xFeItE7hvyvDB8J3kXFpzYVxicuHkdhqx9A
WRYV5wreGOR2HUcb8DsR6ZdU3KLFte1I7DiqvZSwhvGOion+Gkcn7cJIpg+o
WDqmUz+wbxxdmTh/WSKCilfdsr7dIzOBNi/R/2EtR8UBrsvEN7tNIPuWknMn
r0lgov8mUK+d95rKPxS8oKJujyfQDsnrLULqFEz04wQSuad0qECHjPl/Nb2y
lp1EfUrrN6wWJGG1C1U6T90nUd7XEvmq3aLYwbLkwrL4SeSwOVTs6i4hTPTr
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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJw1mXc8le8bx+29znKOUGQkZGdzX2b2LEmiIZWG1VBKIqMlDfpSaWgoKZWM
jHPLKkmRIkpGIWSvCD96zu/8c/54zus8z33f1/X5vD/XI7s10G07Bxsb2xg7
G9vi9/8/kTeC28FGHDWIrZvSLjqF9q4jf+HdoIsyL2lTDxWloBjed4/DVdyQ
oIh6vI1jOjLSb7rKuLgNITfL2HVFD9CjjFIdoWXBaGi3PP8rWjZK6Na+2Xr2
COv3zxHHlvueq/miUYuLZu33k7mIT4pfp6nhFBofMXL0LypAxWe3Ftz9lIjE
kqxr+keLkOOt0SWFlkms/8NolYVUX4duKpotemAT87QUzfpvfSmWeYP1/2Wo
6VjVUNP72yhUXUOF+qscxRfcCSjkv4ciI18ENJ6sROotThvloh6gnlu5wuky
r9GVtXv1SvWyWPd/g47seRv5/HI24rQsPbvS8y1yrzH7UPfwGdq9/ZX6+GgN
6pxPyHD5loPCctcE5p+vRZHXNLboqOShsmj/xmLaByQ+kVPme6kAHaJ2Z6R3
fkAXNj9MeUEtYj1vHXISevOmPKsEPXVUXrL7eD36dNlPOuExRvoT/QUOjh+R
uParlmixV4iZ9mSDmmQDeqQXEPMrvIy1ngY0qNccXDZYjv40jlSP535C1XE3
A8YCKlnr+4xqH77/5NFfhXRIusbFbo0o7DnPYGbIG1RYMNWSJtOEDCyCq67+
rUZmWwvDIweaUP6v9xF34mtY6/+CupL69mrTatHRq3P9a043I9vx676Xb75H
GqrHS1Z5tiCV24rTRy9/QHkNZj6iil9Rq8eRvboedcjkGNfc0OhXdHZc2GEf
tR4NC8e8/1z6DVWwj83Mvatn7Vcr6hc/8bTkxEc07yMgmrrpO1I41GTpr9aA
vhyyGmLS2pDQo86pW/UNSLpGEWcfbUP1s9ei/u75xNrPNmT/I0p7auYTernz
ddhlu3bUniT/fvzYZ9b+tiObDAk3q+HPaD13gGYYowPJQmyC9NpGdHWDPfuu
4x1oVkxS9dqdRtSapVq3oasDcZ1LsSxua2Ttfyeq33vKO4inCYXb1Z4yyelE
KSrRAdGUJvTpYkKIhuQPZP/zN9997iYk0R1oLhv1A/3RCP9ysLkReRu5ksm/
fqBQ+0zZ4PONKDeaNMPl8hMt0xBNGZFtZJ3XTxThGjVnfv4zMlFtSO2S7kKa
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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0]], 
          LineBox[CompressedData["
1:eJxdmXk4lN/7x+37NmPGkGTf9yXZz42s2cvaLlSSREUlkaK0aVOpFCohFUkJ
zSFbkrJrlRSy72v48nnm+v3xm3/meq6ZOec557nv9/v1PiPtu8/Nn4WJiWmc
mYlp+f3/v5qE3Kd1i8+g8wMv7k1VaqHsK7qU8OKbjGsXxCugedrWMR3FXG17
UfLdFyG3tXHuxZlI45exdl9FCBreI8ddRn2GhKSf3C7RPcL4/nMUFpsqoPrt
BPrqol3XfrIAHTZj7f3w6AyaGDV2DCguRBN3tl69R09EQtesa/vHitGpvOGJ
FxrXGONhZNo61SElnYzmizNtT+WWoj/HVn64dO0uY/y3SI6PNWlTRRoK09RS
pfwtR3Dm451tiw9QdPSLwNaTlWh9/66VveGZqCe1gD9dqhpd7vGnvFfPYcz/
Dv2e0p//fPEZYl1bek7Z6z1Sunn7i9jDPLTHv0xzYqwWyQl8htdt+SiiwGbf
q4t1qPPcdqdPCi/R29iA1hLqJ3SrupZd42IhCqd0P0rv/IQMqJlaBULFjPut
R7WWDyO5st6gXEeVFXuONyCm0LKT9Y8xMpjsL3RwbERcMmf1RgTKED3lqbeG
eBPyN0j5GH3kLWM9TWif/eGck4PlaKZ1tGaioBkFRSrMde+uZKyvBfW7vlp1
qq8K6ZH0TUrcWpEwv9swJfQdKiqc/poi1YZcnSVj0L8aZO5bdDR6sA1lRGza
cPZ0LWP9nxFnREOZP7UORd5a6LdJ+IKmZ32ur0j9iLTUjr9R9/qKavRDOHuv
fkIvm8y3CCp8Q2vnNYI+eNQj02NsC8Nj31DXtb69utQGNMJ/6mNL6XcEJ1+F
TtY1MPbrB3q5o/dJ/4lGtLiFRzB5czsKOnR/tk6zCX0OtxqmU3+i+s3knVZN
TUiiVgE/i/yJgnWy+DqDmxn7+RPRbwV/ll5oRq93VUdcte9APq8elwVEtzD2
twNJc7yeZB9vQZ7sgdoRor+Qz2ez3+qereiW9zrm3cd/ofIPmX5Mj1rRjxy1
eu+uX2ipaC8d/t3K2P9OFEgulj7P04aO2tedMc3vRDaPKzKYRNtQ8+ULoVri
v//vc7HufRbSJ36jMzzNHyraW9EmY1cy+e9vlFroJKt+rRUVxJLm2Fz+IBvW
CF45pVbG8/qD6vYHCw9ea0Gmak3JXRJdqGnQk/nN12Z0/cDV2M8nu5Cu21Dm
7ckm9KX64Pqavi505az2swudjUhCwlO2yK0bfY54VhF8twGF+9P4nhR2Ix1P
jmYOxXrG8+1BcR6KO5UG6xCVpbD8UnwPMiedFT0k+h55eSRfPTHYg1zKZeIk
KivRrayjfmHuf5HIqc0U0+FSxvP/i8jOh3TTJQuRoc3yjL3IMaa2Li08i1EP
vSiuUtj8drwlaul802w00ov0dh6r0fZ+TBczuPdA1asPRbEoWSfVltDDordd
WEXvQwFFFpJqO6roRL30o6C6Ut1Uu0/0WSVZDabz/Yi1P329p1kzfcP+TpGx
sX6kd+cO34XLX+jXK8q7On0GkBRvvXSI3E/6V7GHBU2lA8iGrfNng3YnfbVv
wN0qpUGUqqXUuCu0i07U1yCq5RP3n+/6S29Y4PTKnhxEIusuRconDtCp6/8q
3t48hCyXhezlMN07o2bqXPkQun/WUfUUHqUT9TeMvr2+lWH0e5w+J63vZWA3
jOSfH4n/Kj1FJ+pxGO2Ss5Bti5ih2w/H6ak8G0aSyxveM0ffkxx+O61zGDGX
rjSN2rdAv/GmVWglbQQFLL/imDBRryOIOTDws087M/5GLvzJFzWCPqmmHLlv
zoq514i5x+WOoMOyY9WSj9mwSgd3ycLvEXTjixvnYQkO7HB2Vi5cdBQ9fTGV
qXKVEx9+6nNzeN0oGuV9KndYgBsT9T2KbANT/UITeHAxq8nujrxRJJF9NeUv
Ox9eWv13n65RZMPCr38wih/zNpyzahQbQ9zzDiXBIwKYqP8xNH2GtWdKXQj7
3PsuXRE9hvZf7rq4+7sQJvphDLGk5Id4nyLhR8EaCwXdY2jQ8kfohCwZ14hK
BmiKj6OnCs7eji/JuL9MsC7DaRyduFiasN5UGBP9snQt2fys/bkwNrq0Levm
i3EEadyUXFEK3vkCrxL+O46CfJTZQndT8JmtuXFnV06gGbWPsUXpFJzNnTbI
6jKBNuP3fOIVFNymzrLjWOwEciwJJom+p2CivyYQU7asjdFzChY/0akT3DuB
KBvNG8lHKdj2oWVGt8Qkcr9f1mYhRcGBLnqC21wnkUGqEHP8PWFM9N8kanA7
bFw2Q8bLKur6ahLZ+ScYcqmQMdGPk2iv5GhStiYJcw40V1lKTiGrtuFxe24h
rHy9UrPYbQq5CZm8KdnDj+3NX17Xi5tCfxvoctd282CiX6eQ5rdCrQZeTnxT
kOuAwsAUys6vWG22nhUT/TuNSnOKDmfFLtB7vnu5iG6YRszp72+9fTFB5z5t
9yoxfhptp1kJRp7roes/zlTjKZpGQQPHsnj4y+hEf0+jRbPOspjEn+gI09l/
s9IzSK31a4DK2jGUIdcXcsB9BlH66XWOtxZQdd3Xtv7TM+jZ+Yi8W2Ls0BtR
C/7FM2iPb8zTnkkeoN1Re/FjaAaZFvhj70AhIPRgFqlv8tiu6yIMAXuOXfrk
MYu2uzys/y0jAvHU4BnbhFn0+j/5E4VM+pbtpSWzKNeZqaLaVxwIvZhF796V
55x4JQHT55+aPpebQ9WKft17ayWB0I855Ps1rZbjnRRYb2Ja8eDsHIqTDp09
EiUNuzhGYiTocyhYRFMkjkkGrqm4TiaNzqEh8a1HA+xkgNCXf8hMwS35w3oZ
aIvSqYz3/oeCpKvNucVlgD39shHz+X+IlysnXvOWNCg6xqYdxv8QRYonwKFe
CuymwnhGx/4hRdqObRLhknBIvClqj+I8Ss5rFOzNWwmEHs0jST9vrRFPMSjc
98Jp04V5tOziO/dQoesK9W1z6TzaGbWak2tSCLjMOFSdJubRW+WwsfNcXEDo
1QIyeG0f3npzFnnweXLCpgVUME1h6hSrY/jjAlqtzP59C3mc/uBLRqf22wXU
5/HRbsiYA1edvLEua3IBPa7uiZYzIeEejTPPZVQWkb2vXeGcCQ0T+raI1v0+
oTs9txKvWaIYyqVFdPXU06cHlaWxn7QR24XyRRRcVqKz77wsjnuvEsQxvYiG
vIKuJCTJ46bX/IF0KhOYTwjKiOko4t5aU7lITSY4fXdxVbGTEib0kAmaOS+H
C3xXwnzhGufGfZng5h2roQ2flLDMmS3WuZFMINr7rExdUgnr/vA4sjeJCX6F
N6oblytgQi+ZQFFTh5n+Rg77WB3f1fWOCZ5z+sRIC8tgQj+ZQH2p3Z8nSeAT
jzM8ts4zQT8lm2P7IBVfYb6XIE5jhhgem0T7XB6c7rGksFrMwArUNcHaw3RC
X5lBt+P67OHGSfS+BD928WOG3H2KpA4kCITeMsN/POQrBqNyf5PfXWcGt4HG
kRuu0sB6pKPuVC4zvE5f/ONzUh7EzpHOWLxnBnKpwasDK5WB0GNmaHVtZnMd
UgVjfZaR1wvMICNuS7vVog5utjrZ4aIsUJJwTsA2TwN876i06+qwEHUaqAFh
ozLCw+tY4AV17v3giBoksK3/8NifBVSDv/lGWasAod8s8NcvcyIqTAFy9xwt
kr/JAkm5qbfmL0lDGQ4b6shjgVP1j4MkL9OgkRokm1LLAipdUj27VrMDoe8s
YPTO4/p6ll76bORVEo2JFQqrGuI1dpEYes8K35MPbJRZI4mlfxcvXtRlhahl
fF6UxzqGL3QdHFmBPtRebHBGFdut+zPAtZMVlIadzEy7NBl+wAo/sj0U/gVo
48CJZveYZFZIOSp4fSWrDo7h5BAyy2eF//zguTa+vGnBcvYDK9BSriec36+F
03Mnwwu6WeFFUI4m+YQaLnyroBPGzAZnZwpTlfcoMPyDDRwy11Vql0ngr3tp
yX16bLCXOXVimJ0bjxy32fDIiQ3yH89VWYxPIZZmdNpvFxt49msWKT4VBcJf
2IDlc993yTXyoGyy69D3W2ygX/spQoZLHQi/YYNfkgXju1K0wTU90c/jIxu8
eCAweuSxLvhOn75B/ssG3ssAEqUHocvgw8IOmulewbsndIHwI3bgFk/Zosyr
A8n5ma9t9Jd0c4vihH+qOjyr/HyAzYUdkiykrhv8koNS8YZHeDc7DJpzVV/H
FGgIqfkWGcsOWjt4WgzEO+k9J2aTDO+wwyIbTTWQaQXDv9jhOVeFxyc5Jcyj
3reQ+2np99cOZz/5qoWlkXhhcO/SfHk32iJD9LD2VeEBFTYOaAlrmKsM12f4
GwcULKUzoXx97D1n/DV9DQdYWC7NwLua4Xcc8ETdRJN6VhtH+/q9W7mHA5pl
0m4Uf1bCl15umm87yQHDaU+lPtiK4jQ+d+1rKRxwTsuqUG9hCBF+yAHaCvMl
FA8peBd2TFKggQM27xla735aHX6eyvlc08cB0xkbzuTJ6sHwlwf88eycoEkV
HzMqWAPMWinmlpKc4Pqjqn4lvyGIWtTNLRpwwkauUJey/jVA+CcnbLmzAyY9
9MCw/82OiCBOSD3Fdk5DUh1cFgYlVsdxwv3VHHeEAlfC9vXdriN3OSG0PfDO
q2/j9NBH7adyCjnhoLTH8ZOXZPHp14IQ2MgJxykHu1Yt1Svht5wwXeaXtQ3W
4KfSBhqdHFwQqs3Rsv+GEcaHtHzvSnFBzb76d25DRrj+vVLSRiMuMHGqv7Rp
hQEm/JgLerl+Bow46eBpHdeTTXu5wCbbp8HVWg4T/swFm2ev39ex+kmXSj4c
6pjKBTNppltsW2VAe2j/Q+4iLnB65dmV46sDNsxp2yqbuMDY7Vg3Td0QCP/m
An83S/HoDyawO/tytRkXN4gZ8h798sAEjpeUnZiT5obOkC7PsKsGkEguKnhp
zA3CkY3jn5m1IXXn894wd25osyWfVA0Rh5eHO+9r7eOGoa5MgUJuMib8nhu4
unpGjs5p4PafvFcy07hBYUGpt3a/AR5ezVblX8wNPYGqk9dHTPF/+NDCDe93
/R5LYEWY4IGl6xQ2/W4XY6y0LKDcPGCXdt1VDeligg944JfPwHbNfEm8RIGt
wqY8EHha5Z/YG2HY9sSK95MHD0xEH66+aqMN+1nN0LkQHlhQdk/rZzdm8AMP
bAsTSOFeDXAjMECd/T4PmDYVbKdoADyNTOouLeGB0/ayAZOZRkCvvyAe1coD
O2w6XeiSWvBJId7ZaIQHuAyHFjvvs0K3wUvuKR5eqGkvSa/sV8QEb/DC0u7y
n440wFydGfv3mfHCTFF40w0vwJITrapqXrwg4rhTMXavOday/7S1Zz8vFFm/
j1nlYYYJHuGFiWJxXp4qXeyZO+24/QEvSKbVS5SbUTDBJ7yw8nm/3bY5eYgS
lTb50sYLc1d35L2SNYSLe8VCkkZ5Qf7jxDEDLXO4V0a678bHB8Ipn/qc7S0Y
/MIHmy7duBfHiaBK2ejye8QH8nUJj8481IEfxoEOp735gFoOrW/wAhpK9I1e
G8YHYx6b4wNVNDFTl08+03k+6Dz9YpoybIpFphOCSx7yQcuj+F0H2i0wwTt8
cNbgjl/2UQtskHa0ZfUXPlB7PZG8KtIYO+VnJ46O8cGUt//D/DgFvJX7fvkT
fn6wLXtzZy2bFIRsuT0dqMgPx55/OP/3hSHEhdTmKZrzw3a3yEiLPAsGH/HD
f8cO45bwpHX83r0D/PDv4TM3c0UAutpA06YL/NDVW6Uws1oLPsb84RJ7xA/J
8kuJ6B0JE/zEDxz2PGrR7gZ4qod/6tJXfhB6fn1vBrclJniKH55H6Wpv/rYW
r3LR/8MjKAAzLfET1lOANR9oiFUpCUDq54P7rE5oYauXWxpjLQTA/eGN2HvP
aUDwlgCcPe07yiFqDDu3Oxv/OygAygffGVgHrIWosOMTry4KQIZ5vUn0diu4
UB2ufDBTAM7f+NytzQJwVyJks/ZbAWjIcB+Pr1OAAs17tMFvApD9YTH7gpoK
g88E4P2XhxGbFgB/T6pm3ykkCDuOqveUOFvjwT5sKKsiCLlvb4xP3V+LF6Fw
b7ulIKhkRT0Yu2PA4DdBSOYZsS02aUMKjzo2eoULgkcKtCkXGALBc4LAtkoU
pg9ZgaMgj319liCEp1+ciZ61hi1+LFHnywVhc6n+r3ePAPYVzuba/RCEo5Qn
Nh0N0kDwniCc+cSl/0RQF69LJLl0cAnBjpcfVXR3rMUeN5Vz6FQhSOtbCm4S
trj9rXzVHRkhmFqlYTgoZ4l3Dkp3HNUUAnsLmb2dimo4bMrQzMdECNo7Du3y
uq0JBB8KgV6qna+d9FqIddAJFfEQgjoRIR/BP7Zw0d3+47ivEBxNjR7YJrMW
aNHWfxv2LY23zK/56kDwoxAEl7ptxu1aOPu5z7aLZ4Qg9JuyxGNdKwZPCkFv
fnDsl1t22Kw7uHVduhCIrZR/WnfLEleR9owoPxMClp3K3k4J8tjZZCcvV4kQ
XO+knk55rA8EbwrBxSq+DZVnbKBz39ET5S1CYNf28srpL3YwGHGlPa1zaT59
CeZvC0Ds67AQ3A3fYb5daAQtfjgrvHVeCKg533hrQwDztKaHmPKQYAV92P6y
qz2DT0ngcM5/Vj7QFour3b4/I0uC6zVfSU5n9bHC6nzmNi0S5NAsDeut1eHp
1mfiBaYkEDuYU+JcZQ1rEh6vvmpPAs3STEG5nHVgcaX8cqgnCf4ctZbR22IJ
BM+SIObZ+scr/LigpbKNW3M/CTg3l6W+9DHHW0aaZPmjlsaPKzdN6l+Hu8Xr
TfsSSDD1dynYZdhigndJ8Pjs111MGdr4qPOf/Iz7JGgL2CHfdX4Ng39JoBx+
tzP9pj0IxM6o+r0hwXIcP/NyHVzPmbCyeE+CisTbDt88TCBt+fi0jQQd1jUi
ds/VGOcVJNi+wU3x3pQtfs7L0fpthASsCiF9wdsc8RvKKr2iBRIkXE60/Xrb
HFujFU43eclwOvak0tZnUvBxt8iucFEydCU2WbwbtIEvoRoV7vJkMIyOaqe7
OzF4mgz82RGyYx6WEPzQwoSMyPBo/arvXEWiePKTmcfwOjK049/Wl7ht8fE5
o5A6LzIkSNW95V5wwgRvk8GI5ZV3caAlJms6dyeEkmFp9yIijksx+JsMzy46
bZ45YgcPfXdssTlHBr5DbwusvJ1B4/zWCPmbZHgdf3JoPtMcXr7ceJn1IRkE
rWLMLl1XxwSfk6Hh/LNHp2kO2L5vHzemk+HF+rDC0mEn7DEeH5BSS4aiHbmO
KvbG+Meqk9GRn8nQvdC7v73SEALsopN9usjw9sQcs6CBM4S63ZgyGCODn6eP
dW+9AxA8Lwz3HiYtPQlViM1IVJ3gEwb+n+qJ91TW4gtL0zaKCcNMvLppcpUL
Fvl6Py1XQRgu0ho6pLNsGLwvDFvU+C41ZohClkChWDAIQxM/JUJxcR0Q/C8M
W+tzWscTXMDM4kOiio8wUPf5rZrZaAKVQe+yuHYKQ6nYv3nfGjPstCz4YcLQ
+ZAj+eOMCyMfCEP14UVJRY91+FfNZ+P088KQGVu8yiHhKVqOWTHJwnCMK8v6
afE6OLQwkLc1QxjCBLnb59a4wjKGmOYLg+IP5pT8nybArcOisrJUGFKL5OoS
lMwZeUIY9ixvSLUrXhE/u7ntizC8Yr4raY3tsPwyEHULw99GlVnLMVl48lqg
+eq4MJz7Mq+COVyAyBsUSGDtmZpfWp/FoIyDqwAFHEJ6Wd/dUgEif1Bg4RZN
8c0zO9wsveYtvxIFVm5+UNTn7Ya3OOh+79OjgAorZ/6BWMBdhzSn3plToCna
vCFD0QKIfEKBrTdf9hoVucGRLMvguI1L18dMxr9L2wKRVyiwHBNfHVyN+X94
/rE4SIFtfyMjkvTdcBLXhkWpExQw8g4saU9yxKmkoE2LFyiwb6zSbvuCFCPP
UID3eNyaPetcIS/AL7HoEQXepz07m3bPBUr2RQ7cfEGB5dPgtLuzyDo5gjOi
bCl3lBvjK9tccF35AWmPjxTQitWWca1xxZ8/nIvS+0aBETVza1gtjYn8QwGB
mZ0cI8edidw1QYFK2sCIxRE3mFC9I/iRhQqVe7Y0ezsqQdSyYQhSoXS/2JrV
Ws6M8zoqrEgw/vG7zg2TEnLu7VamgqPtHj6j7UqYyEtU+Nn2vFtn3hkelJTS
FCypsItzk2dtrRssuaQ2mwsVgupZ8nNWSYPhSPOFX5uoUM7Bq7h72AUTeYoK
J29PLe7f6IbtrevKUg5RgeSxg3tP5zDd3blL8lgsFaR9VL+sdHKD74d/GW5M
pILLsvFbuULA/R/rDe9QIYuHvzzvrxzenzP5jJZFhb0VC3lHm9Yz8hcVzu1+
ePTOISd8gmXod+NbKqR+Xbci/Z0hnOfltMj7RIVvbf22E8LuQNVn3ZT4nUrU
S40NEPmMCuoR9Z6JHNY4czet0WGKCj1UZ9OGIHdGXhMh+mzAGJveUbXnJomA
w8+W7ya3nKGiStGvW0IERre80OkQ2wBOo7JRFSoiMGu++b5Lyz9E5DkROGkb
t3Lj4HrcIW8wEbNWBGZOiJC1PFxwv4aL2zZXEbihlXxtgNcUDno7BJltEYF7
/74bB8p4wHzs0g/3iECOw/SDKBdL4D6/rXM2XARqub/8HuZ1YuQ/Ecj3Svit
OrsBi/3yor28JAItmaOmsqRxunxfyIFrKSLQSJe7pjy8AXKoey+EZS/dj6/q
Lp8nTkDkQxHIPN1oV5CwFpvbxbBrVYiAbnup88p0D0zkRRHgvcWsUV2ph5si
r0X2/xAB5a2fLFhc18PmjEtJNX0icLuDIzJKwg3+1C8J6bQI/PHle9y5yQwT
eZIGD23Wm95U9cSH2dMU/ck0KFAdL9WxN8FEvqTBa//46fhhN+A3LEiRVqNB
aoyXfliFG1xbwvBFAxponj3zoYoZ4XtBNdQfVjR4emU2L/+UJ+P8lga68+SR
lptrcG5pmV3yVhrI3cruMtywAYprlsAuiAbY9ONd/c2uYDXRgj0O02C3gX/w
m2Yr/EGy8YteHA2ejNzsv+vniduU+tYIX6HB8vGEoKoIJvIqDWy/170ZbfOA
pe5+8vExDcSeCES/mreD8bi56pxCGnxZorztF1zwsdypX2crabApq0GkVdqd
kWdpEL5zoID3vBGQ/vD62P6kwZVqs+q8jV5A5FsaqKZf+qjqqw33RaXq2WZp
ULPm67cbyR5Y3XJl3y8OURiwlhxjXuOADRz0bEuFRaEis6VMrcUFiPy7xJYV
D1T2kt3BLlUt8pi6KGxV2mYsqmyON2St/bzRSBQuduTerYj1wt+aYMzQRhSa
hspagvyZsf+iCb/oBlGozp3g6wj3ghAu98DJbaLA+te30d7RAoi8LArL5QDR
7jhms2NK3pGl8X4uAYS1Cz4X4D+XGL/0eUI52+pDLkC9tJ2676ookJYHCnAH
Ik+Lwn/H6LFr8aPyg+dUn4gCNXES4UAvTORrUeBif7DrzwV1MFn+I6NKFGQD
0z7axHjDf397NYmC0vjslekmOXB0PLHmfocooFWzgx7s3pjI36LwI5zv4vwB
wD+jk55smxMFET31XB1/T+g/84QXcYnBrp67P30H7OBAfpa8BFUMeoo2eqcJ
uOP/AXqFW/s=
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, FrameLabel -> {{
          FormBox["\"f(x)\"", TraditionalForm], None}, {
          FormBox["\"x\"", TraditionalForm], None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 6.270619}, {-113.286675, 115.127104}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Actual\"", "\"Central\"", "\"My derivative\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.8866767260408163`*^9, {3.886676829030898*^9, 3.88667684357623*^9}, {
   3.886677090511735*^9, 3.8866771237094517`*^9}, 3.886677156916095*^9, 
   3.887087610200594*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"f1a34e8c-2c35-4981-8375-0d3cb5b7aaf6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<outputs/uloha2.csv\>\"", ",", " ", "\"\<CSV\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"Cos", "[", 
    RowBox[{
     RowBox[{"x", "*", "x"}], "+", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", "Green"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<Forward\>\"", ",", " ", "\"\<Central\>\""}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<f'(x)\>\""}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "'"}], "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", "\"\<Actual\>\"", "}"}]}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "''"}], "[", "x", "]"}], ",", " ", 
     RowBox[{
      RowBox[{"f", "'''"}], "[", "x", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Second D\>\"", ",", " ", "\"\<Third D\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.88667769468381*^9, 3.886677831876075*^9}, {
  3.886677904555593*^9, 3.886677997663086*^9}, {3.886678032310968*^9, 
  3.8866780520575647`*^9}, {3.8866780902386723`*^9, 3.8866781582609577`*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"57006952-3c65-4e61-833e-14c84392cd62"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXb/3UNNvRc4DS3p2MJhkCRxw/HRuIU8p+4H15wwV
qmMZHTieCLnLnWA9cKuEpWDzC2GHUxLyafrSLAfaJp1cOXchk8NErmRuxzym
A1PS4/h2r/+zP9g+XyvoIMMBCz+uz3LPeQ+YJqXNP67xb/+Ft6q9F3+xH9hx
uu7uy3O/9v9+LSp2x//Dfvf1bBq8pd/3f4+6UJ3c8dweYv6X/XMWKe/84/7L
PvLPsg1BBz/sr428tXJnzB97iP5X+2OktY79jP5uf3VSX5GB9JP9DzWfeNly
f4DK39p/gecRs/W/h/ZPN9vwvzt3av+c2y3VqfeO2TNAAZS/HypvD1W/H6rf
Hmrefqj59lD7oPKv7KHu2Q91nz3Uvfuh7reH+gfmP3uof6Hu+2UPDQ8HaPjY
Q8PLARp+DtDwtIeGrwM0vA9Aw98BGh8HoPHjAI0vWPw5QOPTAQAoi/Tn
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQXb/3UNNvRc4D30tKjydlCx1w/HRuIU8p+wE1af5t
N96+28/xRMhd7gTrAcMYWYbC6TwOpyTk0/SlWQ7Mij/L2GTJ6zCRK5nbMY/p
wPW2rsJ/ahftg+3ztYIOMhxomW/RUCfPdsA0KW3+cY1/+1nkJBx+fOA6sON0
3d2X537tT5n8pyNekOGA+3o2Dd7S7/v//tyWsFLv0H6I+V/287xotRZn+2wf
+WfZhqCDH/azO7qvjgr6bQ/R/2p/eu0pw8g7P+2vTuorMpB+sn9mqj/T7M2f
ofK39nsaXD0TxfXS/ulmG/53507t3+58OOnK1uv2DGgAKm8Pld8P1W8P1b8f
ar491Hyo/Ct7qP37oe6zh7oP5n57qPv3Q/1nD/Uf1H2/7KH+d4CGjz00fByg
4ecADT9Y+DpAwxdqPosDNPwPQOPHARo/sPhzgMafPQBLqOQ1
          
          "]]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, "Charting`Private`Tag$64519#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, FrameLabel -> {{
        FormBox["\"f'(x)\"", TraditionalForm], None}, {
        FormBox["\"x\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3.141593, 2.932153}, {-4.977247, 4.977247}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Forward\"", "\"Central\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Actual\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.886677909881092*^9, 3.886678110572218*^9}, {
  3.886678151861431*^9, 3.8866781587937403`*^9}},
 CellLabel->
  "Out[217]=",ExpressionUUID->"bc133485-8620-4e88-9d8c-f6009ae884f3"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
+Wsz/AS3xws1tezuQek6w6M9ayjYccLmeoxSD/Iu/9z9UYCC1+ulcl0W70HX
2nzSTq+l4HyfmRgV3h60NawmboDQJ5v1dy0tdiMLswQ5c0EKXpb2+1k80I1O
1Y8GvyF07I3ma34t3agtS2NfEaGNCqQ4LcuJ558KIsoI3U9ziBbP6UZ3OVwm
0gjta5Wv1RvfjSxTOaMcCa0UR2lMD+pG6rWlqxsJ3TBmctXlUTeK2JrnFEec
f1vnLVX/ZjdyPf/KnI/QISHif4+d6UY+S8KeJ4n4c8ajcm6adCOcbtvznMiv
+YDUCx+9brRR1LEunsh/Pj7+YpxiN5I4NBoYSfgjskzX/yrWjbaa7njqQfin
dTxF5D+ebmScaLCsR/jrxpdeyTHYhaQrXlXeIurx9qJy7JZfXSgj5QLuJur1
FWW5aVZ0oa4tyn46VApm3c6Vv5zYhUqHLrZFrpLx5notiuerLgQKBzlSl4n7
uP1r29vHXSja+PmBcKJfHvwt8q+17ULhtK6zjAWiHzUNLvSadaG1P8WaO2bJ
GAWW6i3rd6GK5qfJt6bJmLS3akx5SxcKvOQUZUr065MPjWbBvzuRl+PIU3YX
GSfSrLa/r+pE3u+1fKc6yLjMroVUlt+Jfpqrnm38Q8ZcIn8+zr3uRJ2tWz5b
NJOxz4PedScsOtGCZNT9C5VknNp6adTRoBOl6Vxz+1xKxtVqQ2V+Kp2I5kQh
ploy5h0Yc/km0ImW1yVW7/lMxmIx45kg9B/yydiszZVKxnIG67W/P+tAFBF/
NRcvMr40t3Fo5WIHyniRFlf0kNj/3ZZwlT0daHdAZdmSB3GfhLexX5E6kDqj
TmefIxmr9OzCJ93bESdt1QacJmOdp2cPDF79i57Mc/CMqRHxLN5POnP4L1oc
SGv4QbzPrB0iKc2Kf1GKfCl6t52MXSx/fyse/YN69Ra6jCTIOEvaUjXixh/0
WXJDpQgPGW8r2idm6tSGgvc+yD/XTsLrF3aMZru3osmgGEa3JwlPXGYHPPRp
Qk8469VUfVZRU4aqoOmlJhRna1h79u4q+jp7KXDzniYUtrl5PvjGKvJ61Bj4
ZfU/JPRa7TL30VUkFpYcNOP6HzJtsFTfJbOK9lSav7K/+BPVaLbLswtXUJhc
UqiZYQMqs92iq7a8jO5faxORkGpA+i0DR4OmllH5OUnl36wf6KmWYclK3zI6
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
EP/7J4T//xP6G7xtku0=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$64606#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[{{-2.99033127716014, 
          74.60223085431033}, {-2.9848360697989444`, 
          67.38543512381459}, {-2.9514100016691573`, 
          24.054659590279762`}, {-2.949320872411046, 
          21.40346823603076}, {-2.9472317431529342`, 
          18.76151742740099}, {-2.9430534846367107`, 
          13.50693967971214}, {-2.934696967604264, 
          3.126034707630204}, {-2.9179839335393707`, -17.039138178938053`}, \
{-2.8845578654095836`, -54.38037317183658}, {-2.8826071792085015`, \
-56.41678675444717}, {-2.88065649300742, -58.436076479562885`}, \
{-2.8767551206052557`, -62.422502675889056`}, {-2.8689523758009283`, \
-70.18149419969313}, {-2.866473193673895, -72.50473713452077}}], 
         LineBox[CompressedData["
1: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
v+M+MTJLRxX9doHRMUp4v4puD/9nOtINiooCwSrYlPwnUimBjoL0jhmTU1Sw
/9XXVkYxdLT/ovfz3zUquDHvb/21Z3Skrn3LJWa7Kr55OA61XaGjQ9x98epP
VHHShWO3Zy7QEWX0mrZzsipuekjTZLeno4u7YzL3Vahi6Vqz7+qmdOSnWLEs
vqGK28gbieEKdHRFVijlobsa3rj62TFNgo76C9tqFx+pYbk3NvvK9tJR3fae
a9Mf1XBAb8abeU46wnzJVjfa1LCik8NTi780ZJcWv7aXqI5tgzmPXhqnIbgv
VWb8mDp+kJLHFtBPQ8FO/D3ajuq4Z2bnnYwGGuoSTR0PDVHHwddKPbm+0lBm
JtGX1q+Ov71xV5D6REMHFEZitebVcV/+nj+6cTQUdDz2FRc7Eaute593f0FD
4wFR+7xkiHgwWPxkvQcNObMG2e13I2KO1EaeMWcaepj88jXrbSLWqLvZuHKO
hoTKn+y/+YyIQ7hbj8qb01BPFPtdpVQi1oy6r/1UmYai6tQyigaJ+EKBMv2j
NA15fRZucZgh4hd9vVn5ojRUwWm0+p5BxGNiRMU/3DQk/vdo4zw3CXPrD/0h
bKWhjWcRnzcJk7D2xZBPggRmfGm2lRxJEg5LHRM1nqMinUInR4oWCRfVhfb9
N0lFb10Ofg/UJ+HJvzpvrw9RET9hZPKrKQnrqb3mTW6iIsE9wwHTZ0n4svXh
XyXVVEQ+OSm6epGEI/z+PuvAVPSm+oBYhjsJTxUYbtr8jWmfQixfv0XCn8Ny
a31TqEj8oUmh1H0SdrskGzr8nori6leyRp+QsAKIOWn+hooKrnbf0ggl4b+7
dwgXv6CisidDQ6KRJPx15u6QXDAVtSD/bx9iSNjj51xS1B0qMuRzL8r/QMLK
0eevbL7GfH93vOlKEgnPebWpXHVj8vvuUJKbSsLfjhrRhi8w8/37xTruCwn7
7MsrND9DRR3dExfEvpGwGlU2sJhMRSx3Lxfp/SDhxboYI/ljVDSk3aK0nEPC
P+J3cL49TEWb+6jPrPJJ+OqNe82btajoUk5v4vFCEiZZzEdeVaGi1Y7cY6NF
JEyTumA/Ik1FVDhuJlxCwrlrbfstRKno26GhIAoT+7cZ/S7mpyKjTJjniUhY
83NeujwXFWVF/sDPmXgpUM7n7SYqivdZdjdn4gLb2INb1iiodrA3LJtpf1OZ
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
Bv8DMM/gSQ==
          "]], 
         LineBox[CompressedData["
1:eJwB4QMe/CFib1JlAgAAAD0AAAACAAAARPU/N0XkAED7dfucTSBSwK5i0kAW
5gBAatzv4o8dUsClaXzsTuoAQGmK53RwFlLAnHAmmIfuAEBB7a4a0Q5SwIp+
eu/49gBAuerpsg/+UcCBhSSbMfsAQD82CjTs9FHAeIzORmr/AECh4GvmRetR
wGWaIp7bBwFAVPH3F27WUcBcocxJFAwBQMWoLDo7y1HAUqh29UwQAUBD6c/T
gr9RwEC2yky+GAFAcrY80X6mUcAc0nL7oCkBQKSTWk4YblHAE9kcp9ktAUC+
rdxyp15RwArgxlISMgFAva6jIaxOUcD47RqqgzoBQIKEzOATLVHA0wnDWGZL
AUBof4/tTeNQwMoQbQSfTwFAoNi2VnrPUMDAFxew11MBQKS8+CQYu1DAriVr
B0lcAUDiQv8eppBQwIpBE7YrbQFASzzIlv80UMCBSL1hZHEBQEY3MR6rHFDA
eE9nDZ11AUAxwXzGxANQwGZdu2QOfgFAx0+dP4KgT8BBeWMT8Y4BQGEV07+q
xE7AOIANvymTAUBIHOl70opOwC6Ht2pilwFApQb45NFPTsAclQvC058BQDpa
nRJW1k3A+LCzcLawAUDnkxYXatVMwO+3XRzvtAFAJ+WjOkWSTMDmvgfIJ7kB
QOaBD5v1TUzA1MxbH5nBAUBqdseH1cFLwK/oA8570gFAXBzmWZCbSsBmIFQr
QfQBQEiAGEsEF0jAc+96QTH4AUCM4TK1A8dHwIC+oVch/AFAhqITHQF2R8Cb
XO+DAQQCQIibDn730EbA0JiK3METAkD8Xdl433pFwDkRwY1CMwJACOnQgx+f
QsBG4OejMjcCQPqgB+Y/P0LAVK8OuiI7AkBzSw94aN5BwG5NXOYCQwJA5Vsi
6dUZQcCiifc+w1ICQLqziFJ8Cj/ADAIu8ENyAkCiajo5h144wBnRVAY0dgJA
IBg5U9SAN8AmoHscJHoCQERHGBRYoTbAQT7JSASCAkD0NriwD900wHZ6ZKHE
kQJA2FeVnZg/McDf8ppSRbECQKBGdF03aCPAsuMHtUbwAkBI2Xw60CIaQHTY
y8aL9AJAlAEKOLm8HkA3zY/Y0PgCQOKAiyZGriFAvLYX/FoBA0CkCfzSv1Ym
QMWJJ0NvEgNA4kJifrXIL0DYL0fRlzQDQPfAFJ6ZkTlA/nuG7eh4A0AAEaJB
4M5GQMBwSv8tfQNA0pjrTuhxR0CDZQ4Rc4EDQGBPi3QiFUhACE+WNP2JA0Bp
mjIzGFxJQBEipnsRmwNAPlQ2+nTrS0AkyMUJOr0DQJAvhEeUhVBA5bTvRQPa
A0Ds+UfziqZSQI4stIo=
          "]], 
         LineBox[{{2.864331686390254, 74.60223085431033}, {2.87994258834674, 
          59.1707693154693}, {2.8818743938859, 57.17736209462508}, {
          2.8838061994250603`, 55.16708806447376}, {2.8876698105033802`, 
          51.09671612400949}, {2.8953970326600205`, 42.762327580581896`}, {
          2.9108514769733014`, 25.367392134247947`}, {
          2.9417603655998628`, -11.889022385612279`}, {
          2.943692171139023, -14.307528125234562`}, {
          2.945623976678183, -16.734851554772234`}, {
          2.949487587756503, -21.614702957745727`}, {
          2.9572148099131432`, -31.466295602081892`}, {
          2.9726692542264237`, -51.46286166612375}, {
          2.9887153726792715`, -72.50473713452077}}]}, 
        Annotation[#, "Charting`Private`Tag$64606#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{-Pi, Pi}, {-72.50473713452077, 
        74.60223085431033}}, {{-3.141592653589793, 
       3.141592653589793}, {-72.50473713452077, 74.60223085431033}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Second D\"", "\"Third D\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.886677909881092*^9, 3.886678110572218*^9}, {
  3.886678151861431*^9, 3.8866781589141817`*^9}},
 CellLabel->
  "Out[218]=",ExpressionUUID->"44ce127b-25dc-4e7d-9933-dfc1acbe8e9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"x", "^", "2"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "]"}], "//", 
  "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}]}], "]"}], "//", 
  "N"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.887088127795315*^9, 3.887088188478725*^9}, {
  3.887088241400544*^9, 3.887088284012267*^9}, {3.887090497455327*^9, 
  3.8870905078882627`*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"3a769a93-aa3f-409d-a1fd-0c2920c9bb0c"],

Cell[BoxData["20.670851120199877`"], "Output",
 CellChangeTimes->{{3.8870881737415123`*^9, 3.887088189145298*^9}, {
   3.8870882442545958`*^9, 3.887088284581541*^9}, 3.887090509164762*^9},
 CellLabel->
  "Out[208]=",ExpressionUUID->"e141b2bf-c558-46a9-a72c-eebf20b3521f"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{{3.8870881737415123`*^9, 3.887088189145298*^9}, {
   3.8870882442545958`*^9, 3.887088284581541*^9}, 3.887090509268759*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"8c93a557-4fca-469e-8105-f81f91bdd21d"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{0, Automatic}, {Automatic, 24}},
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"10704499-750e-48a2-8a8f-0e85bf9601e4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1482, 45, 194, "Input",ExpressionUUID->"55d9bb23-deca-47d4-aa4f-1053c2186a9a"],
Cell[2065, 69, 547, 16, 60, "Output",ExpressionUUID->"481309dc-af79-4e50-88b3-01533a681a45"]
}, Open  ]],
Cell[2627, 88, 267, 5, 37, "Input",ExpressionUUID->"76c3a08d-9384-4c7d-ac6a-d75b82367a55"],
Cell[CellGroupData[{
Cell[2919, 97, 7079, 201, 480, "Input",ExpressionUUID->"4ddcace0-83e6-4c97-8524-c11d238fb057"],
Cell[10001, 300, 149872, 2878, 1530, "Output",ExpressionUUID->"f1a34e8c-2c35-4981-8375-0d3cb5b7aaf6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159910, 3183, 2353, 68, 168, "Input",ExpressionUUID->"57006952-3c65-4e61-833e-14c84392cd62"],
Cell[162266, 3253, 37070, 691, 302, "Output",ExpressionUUID->"bc133485-8620-4e88-9d8c-f6009ae884f3"],
Cell[199339, 3946, 55843, 982, 302, "Output",ExpressionUUID->"44ce127b-25dc-4e7d-9933-dfc1acbe8e9c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255219, 4933, 770, 21, 90, "Input",ExpressionUUID->"3a769a93-aa3f-409d-a1fd-0c2920c9bb0c"],
Cell[255992, 4956, 271, 4, 42, "Output",ExpressionUUID->"e141b2bf-c558-46a9-a72c-eebf20b3521f"],
Cell[256266, 4962, 255, 4, 42, "Output",ExpressionUUID->"8c93a557-4fca-469e-8105-f81f91bdd21d"]
}, Open  ]]
}
]
*)

