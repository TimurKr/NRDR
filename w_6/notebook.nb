(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    255567,       4789]
NotebookOptionsPosition[    253520,       4746]
NotebookOutlinePosition[    253911,       4762]
CellTagsIndexPosition[    253868,       4759]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"a40447b7-45ea-43e5-b3e8-ed43f9303478"],

Cell[CellGroupData[{

Cell["Uloha 1", "Section",
 CellChangeTimes->{{3.888298858873687*^9, 
  3.88829886620179*^9}},ExpressionUUID->"d5b95acb-0c3f-4f74-84a1-\
becabebfedb9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n10", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<./outputs/uloha1_10n.csv\>\"", ",", "\"\<CSV\>\""}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n100", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<./outputs/uloha1_100n.csv\>\"", ",", "\"\<CSV\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1000", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<./outputs/uloha1_1000n.csv\>\"", ",", "\"\<CSV\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "*", 
         RowBox[{"x", "[", "t", "]"}]}], "+", "1"}]}], ",", " ", 
      RowBox[{
       RowBox[{"x", "[", "0", "]"}], "==", "0"}]}], "}"}], ",", "x", ",", 
    "t"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", "n10", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", "n10", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", "n100", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", "n100", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"n1000", ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"n1000", ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], "/.", "%"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"\[Pi]", "/", "4"}]}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "->", "Red"}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.888298154696992*^9, 3.888298160416605*^9}, {
   3.888900423863987*^9, 3.888900427994989*^9}, 
   3.888900905255108*^9},ExpressionUUID->"ed466cef-859a-4f4a-b520-\
b63b5870a632"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.01, 0.01}, {0.08754, 0.087843}, {0.16508, 0.16676}, {
      0.242619, 0.247758}, {0.320159, 0.33195}, {0.397699, 0.420621}, {
      0.475239, 0.515315}, {0.552779, 0.617956}, {0.630319, 0.731019}, {
      0.707858, 0.857805}}]}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{0.01, 0.01}, {0.08754, 0.087843}, {0.16508, 0.16676}, {
       0.242619, 0.247758}, {0.320159, 0.33195}, {0.397699, 0.420621}, {
       0.475239, 0.515315}, {0.552779, 0.617956}, {0.630319, 0.731019}, {
       0.707858, 0.857805}}]}}, {{}, {}}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      
      "]]}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
       "]]}}, {{}, {}}}, {{}, 
    {RGBColor[0, 1, 0], PointSize[0.0055000000000000005`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1: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
9+l6l+3liPST6t/DV47qnfSfNL1ymClcv/15STkvLypH6ej+cNHN5Xiz7aFl
8sNybEiWqL91qBwnBJoF1oeWg/Q6jIvlyOKP2PMiqxwH5u7y1LpfzrPLcl5+
Ww7V0H22NqPlMDEx0lyeQLyvNvfm0JwKFK1TtnGuLIfEfNKzV8Apw3n6CIP4
fuxq4fa9FaA66Csc/1OOw0eG5h47XYFA0fDsfIkKFGQrWzXbVuBPk33fuk0V
2C5vX3/iRQXOvT200FO7Aseq1OrqIyuwTC7g/ZRJBdbMneFzprgC90as6owc
KuB39+D3nl7iPdfcc1U+FbDMFCRS1Ar4HvB6simuArt+VriOi1fih6B5qk95
BbjTUqxESmDKAX468Z5OubWYdiUkLjy2vvSrAoJk+mZaCe60F1Zii3/pBaX7
RJsWLa9KvJd512m40rcSPnedT4UcrAT7SbbEuaRK6InUc4SNK3Htyq33P2oq
kdjwXvzm3UpMHFLc5NNXCSuz8TDq60q0/DaR3slfhTqZstoDMZU427M8pnll
FTYN+f+MKq0EnusG3d5RhSGngcdLqJW4O3/62NrjVTiinpvi+IN4Pn8rrfxa
FYTahA8MLqiC3z72lluPqmDpT7uhK1+F1sI3j1a9r0KVETnDKizQONhdk1MF
j7GZ8mvOVyHK5+Zr1/Yq9CW3n3x0uwr7OME628erwHVnr6rQsaN6+pBwNQTm
/V5w5nMVqk/broiUqYYFCV+Kq2AaHdJkpF6NNaZSBLSswolarZFl56p5eVoV
3udfvUq9XQ1Wf+m6KdFqvKEv9Ah6XY1QR4kUs43VYJLhI7YaM/YNUCuJfp6+
bWdvqqhGbvPOGzuMqtFJZLOTjGpI+QoHBtlVw/VwoGbx32o4nyEtqRpy83fL
eC2twe4vm07eiKyGYtjJa5e21CAocaZbS2E12i5+P7rtvxoYauovUO8m+vu+
wHueZQ0yhWTw6Vs1dp6J2j3oXoPlNb8uC88n+hkpcSkIrkHbhUM/7srUIEDP
aGNIZg12rJVaR91XA/0HN7Z5tNRgIs0q+ciZGiT1kURODU7c209NtK3B1RXL
Bw/PrUUaJOYteV6DddwEuRY3G80CHnyswS5uoKpFs8/OsoH8Gox71NvMOVuL
l7KPT5zqrIEpgW5n2NdibOisa854DewvWKaMvarFsfhNhOXUgtzd/uhaiGg4
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
kAM58uATfvz4Non7nQs44J8eqOUfycCpsJWh9Ss4+Mq6Hv0tjsGLZxxUtl78
fjSVgZcmA0sKNnGQkbXjTFQ2sV9Rzx/m7OLweAIiTnSNrsvV4MAyaPXY2QoG
evg29+Yf5cDQdVI/vY4B33nK5WWnOFC+ORgs1sqApfD8qnoTDqRP5fFf62bg
8mQUX+9Vzj+/SGfAqWndkWE7Dhp2koonBqLDnZL+OnOQL+n45+4XBmZxhUMc
+M630Wom4sBzvmuLFH048Jg4EK30mwF5n1VT2sEcHo9L+D3JlHGLSA62tyrt
pwsSfvjlrFVPkjhYTwqh5hNxgQijsTkc8EVPjb5ZxARTYx2ltYyDkZfV+l+X
M3n3TDgoJWEXESeeJThu3tTNwTsbUjDGBFcWxObg2cknR6cpMZHbOn/5m1EO
zLSc/Ay3Mnm8EQekOipZlQkC/fsKCvRBQVJLS2Q/Ey6eTkKa8/sgMH/Pawst
wi/r0D57LO0Dl74/yvzHE67pQzVTYP8KAybc/KT1xRX7kFXR8cH+DBMKK3ts
zu/og3dm7Wi9MRPD3rejYvb34ernItWNl4j5kvD1cB/OkGVhKybK9eUcj53s
g4rL04FeWyZ+vlyl/Nm4D6vNLxzddY8J9YLJPwJX+/DzhIHfaxdiPOT1E7s+
NB3UYQ4RcUeTpIGc+1AoT0zgORPTuuSM5Dz74L9S/HWoNxMNRbvyvHz68HgG
qYBlot579vG/wX0wHu/adyKUid9HvJZYRfVhF7P+adxHJvb++jVJSe6DbEX4
6JxYJuJerpl9Iq8P0zP9VC8mM7Ft2cZNtRV9//xCJvMf3m3uQ/kL8mAyUc26
sbiqtw8hzie32pQxUaLSmH2kvw8vzOT8amqYaL614F7jeB8ucYl5JmS8v7gZ
/e3DSdWJg66dTJ599ENJvt+ri0rEcfI6mXg/Zq/s7dnCYaLjxX2z+ZL9mJye
uO8lEcdSzH34P8r0o/ZrxNP+cSY+KXtmqqn0I6ft7qjGT2J9mXjfu6cfb8qv
q74j4poE4S6dtfphlXHx4fdZLLzipwptON4Po3c7Bo4Js7CGK3Trx9YXCluj
iTjH6MwUcLjUD5Jtn72MhQxF85SNN/vx5+Ik44I0CzmWdW96HPvRYjComLme
iGvPJyO9H/WjmFj2RQosXj2pH4FyyT1WKiweT9X/zw/tZMHMfVV37ad+cMvV
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
/HUE/wfGNr/H
      "]]}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0, 1, 0], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
9+l6l+3liPST6t/DV47qnfSfNL1ymClcv/15STkvLypH6ej+cNHN5Xiz7aFl
8sNybEiWqL91qBwnBJoF1oeWg/Q6jIvlyOKP2PMiqxwH5u7y1LpfzrPLcl5+
Ww7V0H22NqPlMDEx0lyeQLyvNvfm0JwKFK1TtnGuLIfEfNKzV8Apw3n6CIP4
fuxq4fa9FaA66Csc/1OOw0eG5h47XYFA0fDsfIkKFGQrWzXbVuBPk33fuk0V
2C5vX3/iRQXOvT200FO7Aseq1OrqIyuwTC7g/ZRJBdbMneFzprgC90as6owc
KuB39+D3nl7iPdfcc1U+FbDMFCRS1Ar4HvB6simuArt+VriOi1fih6B5qk95
BbjTUqxESmDKAX468Z5OubWYdiUkLjy2vvSrAoJk+mZaCe60F1Zii3/pBaX7
RJsWLa9KvJd512m40rcSPnedT4UcrAT7SbbEuaRK6InUc4SNK3Htyq33P2oq
kdjwXvzm3UpMHFLc5NNXCSuz8TDq60q0/DaR3slfhTqZstoDMZU427M8pnll
FTYN+f+MKq0EnusG3d5RhSGngcdLqJW4O3/62NrjVTiinpvi+IN4Pn8rrfxa
FYTahA8MLqiC3z72lluPqmDpT7uhK1+F1sI3j1a9r0KVETnDKizQONhdk1MF
j7GZ8mvOVyHK5+Zr1/Yq9CW3n3x0uwr7OME628erwHVnr6rQsaN6+pBwNQTm
/V5w5nMVqk/broiUqYYFCV+Kq2AaHdJkpF6NNaZSBLSswolarZFl56p5eVoV
3udfvUq9XQ1Wf+m6KdFqvKEv9Ah6XY1QR4kUs43VYJLhI7YaM/YNUCuJfp6+
bWdvqqhGbvPOGzuMqtFJZLOTjGpI+QoHBtlVw/VwoGbx32o4nyEtqRpy83fL
eC2twe4vm07eiKyGYtjJa5e21CAocaZbS2E12i5+P7rtvxoYauovUO8m+vu+
wHueZQ0yhWTw6Vs1dp6J2j3oXoPlNb8uC88n+hkpcSkIrkHbhUM/7srUIEDP
aGNIZg12rJVaR91XA/0HN7Z5tNRgIs0q+ciZGiT1kURODU7c209NtK3B1RXL
Bw/PrUUaJOYteV6DddwEuRY3G80CHnyswS5uoKpFs8/OsoH8Gox71NvMOVuL
l7KPT5zqrIEpgW5n2NdibOisa854DewvWKaMvarFsfhNhOXUgtzd/uhaiGg4
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
kAM58uATfvz4Non7nQs44J8eqOUfycCpsJWh9Ss4+Mq6Hv0tjsGLZxxUtl78
fjSVgZcmA0sKNnGQkbXjTFQ2sV9Rzx/m7OLweAIiTnSNrsvV4MAyaPXY2QoG
evg29+Yf5cDQdVI/vY4B33nK5WWnOFC+ORgs1sqApfD8qnoTDqRP5fFf62bg
8mQUX+9Vzj+/SGfAqWndkWE7Dhp2koonBqLDnZL+OnOQL+n45+4XBmZxhUMc
+M630Wom4sBzvmuLFH048Jg4EK30mwF5n1VT2sEcHo9L+D3JlHGLSA62tyrt
pwsSfvjlrFVPkjhYTwqh5hNxgQijsTkc8EVPjb5ZxARTYx2ltYyDkZfV+l+X
M3n3TDgoJWEXESeeJThu3tTNwTsbUjDGBFcWxObg2cknR6cpMZHbOn/5m1EO
zLSc/Ay3Mnm8EQekOipZlQkC/fsKCvRBQVJLS2Q/Ey6eTkKa8/sgMH/Pawst
wi/r0D57LO0Dl74/yvzHE67pQzVTYP8KAybc/KT1xRX7kFXR8cH+DBMKK3ts
zu/og3dm7Wi9MRPD3rejYvb34ernItWNl4j5kvD1cB/OkGVhKybK9eUcj53s
g4rL04FeWyZ+vlyl/Nm4D6vNLxzddY8J9YLJPwJX+/DzhIHfaxdiPOT1E7s+
NB3UYQ4RcUeTpIGc+1AoT0zgORPTuuSM5Dz74L9S/HWoNxMNRbvyvHz68HgG
qYBlot579vG/wX0wHu/adyKUid9HvJZYRfVhF7P+adxHJvb++jVJSe6DbEX4
6JxYJuJerpl9Iq8P0zP9VC8mM7Ft2cZNtRV9//xCJvMf3m3uQ/kL8mAyUc26
sbiqtw8hzie32pQxUaLSmH2kvw8vzOT8amqYaL614F7jeB8ucYl5JmS8v7gZ
/e3DSdWJg66dTJ599ENJvt+ri0rEcfI6mXg/Zq/s7dnCYaLjxX2z+ZL9mJye
uO8lEcdSzH34P8r0o/ZrxNP+cSY+KXtmqqn0I6ft7qjGT2J9mXjfu6cfb8qv
q74j4poE4S6dtfphlXHx4fdZLLzipwptON4Po3c7Bo4Js7CGK3Trx9YXCluj
iTjH6MwUcLjUD5Jtn72MhQxF85SNN/vx5+Ik44I0CzmWdW96HPvRYjComLme
iGvPJyO9H/WjmFj2RQosXj2pH4FyyT1WKiweT9X/zw/tZMHMfVV37ad+cMvV
aixIGbu6eyX1Y/dX6zYHTRZmrQ89dzq3H3JtB1TbD7OwjCQUKvrBX77rofJx
FowuLfk02dSPr9HkBQAWb/37URnEv5V9noVjJz8Fh/b3I+z5lNNec6I/sjA7
0Y9XN6sZ/ldZaPhrLW/INwDLiwWKEzYsUGUY2rvnDMCQFCLdYYFUTa5aNADl
XU96PjmxsM/QpE5QegBCpGDyITGfg4qXJzcOgHtN6CmLpxsdQMM0rbZULxYk
v+2b1qk2gHzWctUFfiyIfrok0XhoAL6tog+vBLOwSf3IudoTA7hRJtBQ/IEF
c7LQaDyA89yLVKx/+eDVAWwPqnW6k8iCTVC8Yrv9ANa7hjGa01n/9AyuA+C7
+VZRMY+F2aueqIw+G0Cb6dM7HiUsXp1kAKVaF3roVSzoHTjDtzR8AO92Gsjs
biRwzk7r95vjBvBMkmRyWFhLGl7mAIhD1jbay0IP+7vFjZIBYJr4ah0WCzHB
lx551w9AgcV+8GGQhQKS3uoaAMke/h1j/dOpsAfAla9MsaCuJKyw4usAqj+T
jpMFInlfqPdnAB/IsrAAGw6VAQpPBAfh7XJN8dJcNrh0ifggrtqY3CkQY4NU
1c2SGsSZk9t6Vixh486SYmudjYNQ0ZKTsZNko2oW/06vrYOYyy0ss3GIdPhq
g/i5krxgxcaPgMyziocH0STSv8qdiOtcGvDkIArHsx9QtrPR3XD5YJfJIPwJ
VLIDbPzSdxrZajUIm5aI5V5EnD+XrEx9c2cQxqQQU4eNL79C+X+7D2LX5+uV
mnpEHN4+ttf05SAWBF5cFELE/Stn/sbUBgxiusuOO7+M2HA/88lc7eMgOqwV
ivUvspH8n/KO5MRBkLcF4i3ZWCB/W1U+dxAhBydthKzZCBwlAFHFIO7sIFeS
DYOgvW0yLYO4tDJvVa4jG6qb86/HUAehJpJ8dbE7G0fj/u7cNjQIJVLo94TN
4/8GMZvpsLz6JRHXjVNM9fmHQGm2Nl/3lg2/twpF/SJD/+pkQWyYEP92WzaE
j1G7FnW+Z/Nw9RDevBC5szWKDcdIoXlFykOwIhP2eDbqnO5svrxnCJrWUyJ9
qcT38fGJuPYQtp6otlHPYeMn02thof4QRA4W5AQSuKKFLIteGMIfOSIQVhDr
PfA+R+7qEFpWPLmqV8+GmE5FN9t+CDHCTmlRrWzYkoHcbQiBX48tn9XD5vG0
Q+BeU2Cw0V7t6agSMARumaSfjaJqsmA4hN0ZoosWjrIxTpblE4ewMErgwrVJ
Nnbe+dXzIXcI/FzBFpunGx5Cl1OtyGp+Di6WHpAyah1C5cUwG0chDrTVv0uo
0YcQZkAK8Tg4S2zfhpEh3COFKxIcBH57HbDg5xAs5S5c9SRwCtcPzBoGEQzT
mKs5IKuu38SGocwl2Dlw3281+mXlMIS+rjT3U+Lw7rEMg05fkPB1KwfJP8kD
N4yGMvbCo7s5EMj4NnN83zAi07vOf9zP+afXPjIM36C4ohnaHBi1KrbNOz2M
G1xinBj/1rI1q82HQYb3FAMOXB/h8U6bYWy/eC1H9CwHzLRjO0/eH4YoWe4n
cA5X/vlkGHy7tl0tucTB0q6WRUFvhtG2US5N8joHy9Jm2FaEDSNuufSM27c4
ZHF18HvsMN5NIxkGDp6rpEXLZw3DfqwvXt6Vw6tvD8O8NXvho0cccGUpTcNA
WcJ52nMOkiLXrmBShiGRHhG1i8BFZDVUdmgYZNXhTQAHK8jPTA2j59l1wy+h
HAQr/3EomTkC8jTpfOLwdBEj+GC6QzA8lgPN6fO22q4cgSMXwHBwOU+qr1F2
BFd3Tk87lUXgQrOx6q3bRkCqLBILCJw14cwI3D8ClfmVZsLlHPw4F6Mx578R
zJ2WF29ey0F/wtu2e2dGwBxN+pXXzMGs4b2BYxYjaGrxOL+8iwOLmQ8+X7Md
wedShyhbGgeT/I+Ghp1H4P9Zl4BanH/6zWcjsAk8YCg7Qsw3jrxAOYJDz3aF
u05wQDtTOPdpxAh22YgI9hK4azc3ARnBAlP+49un96H7wgLf9LwRTCfDxew+
RGZoEqY0wtNF9+H9zx0zp9pHkCBbcPjAwj6Qtz9CWCMIEfGJD1nWh6MrF10+
/HUE/wfGNr/H
       "]]}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJw10Wk41AkABnAZ61rtMjnW42hRatOmXWuXdbwSXUpM2zUqGkeaapAOlZ7W
rqMnR2OSSoryhLYl1jGUkJoakiZmiDEy4/qPY/6lsrNG7PShD+/ze573w/vl
tWFE0cI1NTQ0NqnzSUqDftuAc6DnZxfL692sLzhi2HbW95PTZY5h3RzAOM0h
/ZNDxpHKas5mLD24NZertmdNYtMtTjB+L3CmFasVBXOWXONEQRJFiyhSSzto
3nOZcwaCFhfRQ7WZk7sqsjnncext9c1fL5yHG2+DvndsPnxzpEurjuQj+qT/
3oroYgyEd80/erQYh2rCMzTtyiCoGDl0emkZhMR6vSJGJWwNWFrVhypxznFK
o3pnDTQrVX5ZB2sQ48C/2HirDt+/2vsy8XEdpkMPlEpYjejKZPfaJDeC8WBb
ADuiCQ911rLWpTQh9K2wsfHsYygNNLwCqx8jbSU3qjD5CVLo+c8mmp5As5H7
S+JJPtZ7/BP2JZ8Po2V+ba8vtyBukV36pZkWrMvzLnjDaQWFmPkw9tVzmJGt
a85w2zA22Og2j/YCOU/vzaPsF0A5pHzAfiqAu9WquW/DXiKhYNd6A9FLOPQb
Dp4+0o6Vw6vaJ1XtKCmmRlYd7kDDIK1UZCREfN/uDodkIYL9r+dpeYsQ4+7i
dz1LhBUpfPpMVCem83wYY+xOdAZR2OK0Lgiic0KO3+xCmElyVhjvFVzX2s5K
brxC4bReZO94N5p9XYu9crtRZi3jO1DFuFV+xVV2pwc6lR2+5b/1wsRuOXPP
bTHEZze/nUqSoH2e7h/mdb0YbXA83SzqQ5VubKGgWQIdnQCvCGo/lpsYMhm8
PvC2fhdjX94PMmPK2KnzNUxKKu45h0hhl5LiGMXsB/26z8YEbRlkdHGP90g/
dGoNfUL+lmHdUMd/VSwpMjo9V9SFDiDucHik6YRU/YP2+SXUQfhXX91gekyG
msvfMM06BqGYYcZTpmTQ3qu/0zh1CDe6EipZsQN4eNt/+6rVw5iO9Ag5oRrA
EmpWQtLXI7D6mBkUc3IQhW92Xs1rH8Hw2tQWXa0hpL9otXS6Q+CRfSus1Tsq
T30+PUkOpm6hlo3eMFwklWyzbaPg5i/yeJQ5jLItK73iPcfQ5ubOoxmNICZo
wZ5TVuNQMq9uCckYQetf+l+Yz46DH5C3db4pAYKklSiUE2C4uhcVZRHgO13q
sxxVYP/E8w+92QSOvxs1ZCgUiL4R7EO9QkBXaC0qmlTgjN6f0vhrBJipvAXO
KgVyu5staIUEPFr2sbYZkOg8sZ09wyUQyHp3v3IFiQ33Dp8IFBMQCNnt/bGk
utfiJ0sI5Ci4GS5xJHbYZpvWvSZws+K5lB1PYt+52gr7QQLcMuam1UkkEuka
CtU4gdqid553s0nUT6czCmcJjFXV3i2oJcErXVgu1pAj2HGjQqueRCujfM6Q
IodT2v4nEU0kxC3C3FM6ctx9P7F6+TMSyhyLrgBDOSwFDXH1vSTm/EsWJ1Pl
2O3vd3aRlIQ2BUfuG8th9FPVj6lDJIwPMIzszeUYnv9iB11BwmLh++AgCzla
OUJh0yQJ246kUraVHIL80HGHf0ksSzH7yFsoh9fioryLKhI/uN32U9nI8bNl
i2JujsT/aNJ3lA==
        "]]},
      Annotation[#, "Charting`Private`Tag$15807#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.707858}, {0, 0.857805}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.888298223859433*^9, 3.888298849499043*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"22dbe27c-9e7a-4ace-9d99-e5d0a20cd2bf"]
}, Open  ]],

Cell["Rie\[SHacek]enie z minulej hodiny :", "Text",
 CellChangeTimes->{{3.8882982788874693`*^9, 
  3.8882982974362173`*^9}},ExpressionUUID->"c8373909-05e4-4d45-b444-\
892d2f1e9bee"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.01, 0.01}, {0.08754, 0.088143}, {0.16508, 0.167867}, {
      0.242619, 0.250264}, {0.320159, 0.336588}, {0.397699, 0.428355}, {
      0.475239, 0.527469}, {0.552779, 0.636414}, {0.630319, 0.758572}, {
      0.707858, 0.898744}}]}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{0.01, 0.01}, {0.08754, 0.088143}, {0.16508, 0.167867}, {
       0.242619, 0.250264}, {0.320159, 0.336588}, {0.397699, 0.428355}, {
       0.475239, 0.527469}, {0.552779, 0.636414}, {0.630319, 0.758572}, {
       0.707858, 0.898744}}]}}, {{}, {}}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      
      "]]}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
       
       "]]}}, {{}, {}}}, {{}, 
    {RGBColor[0, 1, 0], PointSize[0.0055000000000000005`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1: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
zCE=
      "]]}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0, 1, 0], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
zCE=
       "]]}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJw10Wk41AkABnAZ61rtMjnW42hRatOmXWuXdbwSXUpM2zUqGkeaapAOlZ7W
rqMnR2OSSoryhLYl1jGUkJoakiZmiDEy4/qPY/6lsrNG7PShD+/ze573w/vl
tWFE0cI1NTQ0NqnzSUqDftuAc6DnZxfL692sLzhi2HbW95PTZY5h3RzAOM0h
/ZNDxpHKas5mLD24NZertmdNYtMtTjB+L3CmFasVBXOWXONEQRJFiyhSSzto
3nOZcwaCFhfRQ7WZk7sqsjnncext9c1fL5yHG2+DvndsPnxzpEurjuQj+qT/
3oroYgyEd80/erQYh2rCMzTtyiCoGDl0emkZhMR6vSJGJWwNWFrVhypxznFK
o3pnDTQrVX5ZB2sQ48C/2HirDt+/2vsy8XEdpkMPlEpYjejKZPfaJDeC8WBb
ADuiCQ911rLWpTQh9K2wsfHsYygNNLwCqx8jbSU3qjD5CVLo+c8mmp5As5H7
S+JJPtZ7/BP2JZ8Po2V+ba8vtyBukV36pZkWrMvzLnjDaQWFmPkw9tVzmJGt
a85w2zA22Og2j/YCOU/vzaPsF0A5pHzAfiqAu9WquW/DXiKhYNd6A9FLOPQb
Dp4+0o6Vw6vaJ1XtKCmmRlYd7kDDIK1UZCREfN/uDodkIYL9r+dpeYsQ4+7i
dz1LhBUpfPpMVCem83wYY+xOdAZR2OK0Lgiic0KO3+xCmElyVhjvFVzX2s5K
brxC4bReZO94N5p9XYu9crtRZi3jO1DFuFV+xVV2pwc6lR2+5b/1wsRuOXPP
bTHEZze/nUqSoH2e7h/mdb0YbXA83SzqQ5VubKGgWQIdnQCvCGo/lpsYMhm8
PvC2fhdjX94PMmPK2KnzNUxKKu45h0hhl5LiGMXsB/26z8YEbRlkdHGP90g/
dGoNfUL+lmHdUMd/VSwpMjo9V9SFDiDucHik6YRU/YP2+SXUQfhXX91gekyG
msvfMM06BqGYYcZTpmTQ3qu/0zh1CDe6EipZsQN4eNt/+6rVw5iO9Ag5oRrA
EmpWQtLXI7D6mBkUc3IQhW92Xs1rH8Hw2tQWXa0hpL9otXS6Q+CRfSus1Tsq
T30+PUkOpm6hlo3eMFwklWyzbaPg5i/yeJQ5jLItK73iPcfQ5ubOoxmNICZo
wZ5TVuNQMq9uCckYQetf+l+Yz46DH5C3db4pAYKklSiUE2C4uhcVZRHgO13q
sxxVYP/E8w+92QSOvxs1ZCgUiL4R7EO9QkBXaC0qmlTgjN6f0vhrBJipvAXO
KgVyu5staIUEPFr2sbYZkOg8sZ09wyUQyHp3v3IFiQ33Dp8IFBMQCNnt/bGk
utfiJ0sI5Ci4GS5xJHbYZpvWvSZws+K5lB1PYt+52gr7QQLcMuam1UkkEuka
CtU4gdqid553s0nUT6czCmcJjFXV3i2oJcErXVgu1pAj2HGjQqueRCujfM6Q
IodT2v4nEU0kxC3C3FM6ctx9P7F6+TMSyhyLrgBDOSwFDXH1vSTm/EsWJ1Pl
2O3vd3aRlIQ2BUfuG8th9FPVj6lDJIwPMIzszeUYnv9iB11BwmLh++AgCzla
OUJh0yQJ246kUraVHIL80HGHf0ksSzH7yFsoh9fioryLKhI/uN32U9nI8bNl
i2JujsT/aNJ3lA==
        "]]},
      Annotation[#, "Charting`Private`Tag$13865#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.707858}, {0, 0.898744}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",ExpressionUUID->"1b2f7797-b9fb-\
4765-b3e0-553a06901f8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Uloha 2", "Section",
 CellChangeTimes->{{3.8882988825364237`*^9, 
  3.8882988975242767`*^9}},ExpressionUUID->"d3b0d75d-eb9c-4099-84aa-\
05643f99424b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"exp", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<./outputs/uloha2_exp_25n.csv\>\"", ",", "\"\<CSV\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imp", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<./outputs/uloha2_imp_25n.csv\>\"", ",", "\"\<CSV\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tra", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<./outputs/uloha2_tra_25n.csv\>\"", ",", "\"\<CSV\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"exp", ",", " ", "imp", ",", " ", "tra"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"exp", ",", " ", "imp", ",", " ", "tra"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Explicit\>\"", ",", " ", "\"\<Implicit\>\"", ",", " ", 
        "\"\<Trapezoid\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "100"}], " ", "t"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "->", "Red"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.888298942980101*^9, 3.888299056431604*^9}, {
   3.888299279989283*^9, 3.888299295789023*^9}, {3.888299607378784*^9, 
   3.888299620235715*^9}, {3.888299737797327*^9, 3.888299737936363*^9}, {
   3.888299779009042*^9, 3.888299803364811*^9}, {3.888300020938024*^9, 
   3.88830007528889*^9}, {3.888300142248046*^9, 3.888300296054603*^9}, 
   3.888300345722138*^9, {3.8883003809104147`*^9, 3.8883003938912973`*^9}, 
   3.888300437872078*^9, {3.888300606265246*^9, 3.888300624359624*^9}, {
   3.88830068097151*^9, 3.8883006871637993`*^9}, {3.888300801769844*^9, 
   3.888300820368072*^9}, {3.88830089931567*^9, 3.8883009224242163`*^9}, {
   3.8883010959012423`*^9, 3.8883010999707127`*^9}},
 CellLabel->
  "In[287]:=",ExpressionUUID->"9d12b1d4-f9e3-473f-988f-2f8739c512a2"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQjQo+2FeLrHN/WLXEHsLnOADhb4HylRx2yLW+Dtyx
D8q3hsofgfAdQhxmzQSBkxB+Qt4BiPpzEP6JNoc3gSCRixC+2EKo/isQ/sKd
DlzXFxfYcl0H8w9YXD4AMe8mmK9w9Y2DZkz/oa8ad8D8G/NZD0LMvwfmPzJX
cFwC0r34AZh/OdjiIMS+hyC+wz27IEdjMHgM4if4xmUfhNj/BMTn2NXW4nj4
qwbQhqcgPo/4qXkHIe55DuJ7ThTf7hgEtvAFkH/g25rAiwch7nsJ5CsUNf96
6fiwCmTgKyB/xtRH1cyHIO59A+SnPLhsKetUCHJewVsg3/tF3GvTQxD3v7Nn
cLDQay8IcAIAVAGWhA==
          "]]}, {
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQjQo+2FeLrHN/WLXEftZMEDgJ5W+Bi++Qa30duGOf
/Z+VHy/5JjVAxY/Y6zrLvH5kFgXX9zHjccfWHyZQ9efse99uXfD9mID9m0CQ
yEV71kXqqUHOr+0g+q/YhzwRKCzWOmnHdX1xgS3Xdaj6DXYQ827aw1yoGdN/
6KvGHTgfYv49OH8JSPfiB3A+xL6HcL4xGDyG8yH2P4HzD3/VANrwFM6HuOc5
nB8EtvAFnA9x30s4/2EVyMBXaO59A+cXgpxX8BbN/e/gfACcmos8
          "]]}, {
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQjQo+2FeLrHN/WLXE3i02+31w6NX9EP4W+80XLe2P
Fu6x3yHX+jpwxz57pYfV9c3fFkHlj9gL6T0RvOPRaT9rJgictJ9+9Mizx7cK
9kPUn7P3OBh8YmpVmP2bQJDIRXvBo094DT7bQvVfsZfgusHn9kbZnuv64gJb
ruv2Mz8prpDay7UfYt5N+zSfg1Lplz/aacb0H/qqccc+5IlAYbHWzX0Q8+/Z
977duuD7sQN2S0C6Fz+A8jfsg9j30B7mQ2MweAznQ+x/Aucf/qoBtOEpnA9x
z3M4Pwhs4Qs4H+K+l3D+wyqQga/gfIh738D5hSDnFbyF8yHufwfnAwCkEp1L

          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0., 1.}, {0.010000000000000002`, 0.}}], 
         LineBox[{{0.05, 0.}, {0.05333333333333334, 1.}}], 
         LineBox[{{0.08888888888888889, 1.}, {0.09, 0.}}], 
         LineBox[{{0.13, 0.}, {0.1303703703703704, 1.}}], 
         LineBox[{{0.16987654320987655`, 1.}, {0.17, 0.}}], 
         LineBox[{{0.21000000000000002`, 0.}, {0.2100411522633745, 1.}}], 
         LineBox[{{0.24998628257887517`, 1.}, {0.25, 0.}}], 
         LineBox[{{0.29000000000000004`, 0.}, {0.2900045724737083, 1.}}], 
         LineBox[{{0.32999847584209724`, 1.}, {0.33, 0.}}], 
         LineBox[{{0.37, 0.}, {0.37000050805263424`, 1.}}], 
         LineBox[{{0.40999983064912193`, 1.}, {0.41000000000000003`, 0.}}], 
         LineBox[{{0.45, 0.}, {0.45000005645029273`, 1.}}], 
         LineBox[{{0.48999998118323573`, 1.}, {0.49, 0.}}], 
         LineBox[{{0.53, 0.}, {0.5300000062722547, 1.}}], 
         LineBox[{{0.5699999979092485, 1.}, {0.5700000000000001, 0.}}], 
         LineBox[{{0.61, 0.}, {0.6100000006969172, 1.}}], 
         LineBox[{{0.6499999997676943, 1.}, {0.65, 0.}}], 
         LineBox[{{0.6900000000000001, 0.}, {0.6900000000774353, 1.}}], 
         LineBox[{{0.7299999999741882, 1.}, {0.73, 0.}}], 
         LineBox[{{0.77, 0.}, {0.7700000000086039, 1.}}], 
         LineBox[{{0.8099999999971321, 1.}, {0.81, 0.}}], 
         LineBox[{{0.85, 0.}, {0.850000000000956, 1.}}], 
         LineBox[{{0.8899999999996814, 1.}, {0.89, 0.}}], 
         LineBox[{{0.93, 0.}, {0.9300000000001063, 1.}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQjQo+2FeLrHN/WLXEftZMEDgJ5W+Bi++Qa30duGOf
/Z+VHy/5JjVAxY/Y6zrLvH5kFgXX9zHjccfWHyZQ9efse99uXfD9mID9m0CQ
yEV71kXqqUHOr+0g+q/YhzwRKCzWOmnHdX1xgS3Xdaj6DXYQ827aw1yoGdN/
6KvGHTgfYv49OH8JSPfiB3A+xL6HcL4xGDyG8yH2P4HzD3/VANrwFM6HuOc5
nB8EtvAFnA9x30s4/2EVyMBXaO59A+cXgpxX8BbN/e/gfACcmos8
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0., 1.}, {0.030000007500001875`, 0.}}], 
         LineBox[{{0.07, 0.}, {0.08, 0.111111}, {0.11, 0.}}], 
         LineBox[{{0.14999979750116438`, 0.}, {0.16, 0.012346}, {
          0.1900006074965069, 0.}}], 
         LineBox[{{0.22999817751047932`, 0.}, {0.24, 0.001372}, {
          0.2700054674685621, 0.}}], 
         LineBox[{{0.310016420361248, 0.}, {0.32, 0.000152}, {
          0.34995073891625617`, 0.}}], 
         LineBox[{{0.39, 0.}, {0.4, 0.000017}, {0.4295652173913044, 0.}}], 
         LineBox[{{0.47, 0.}, {0.48, 2.*^-6}, {0.5066666666666667, 0.}}], 
         LineBox[{{0.56, 0.}, {0.6, 0.}, {0.64, 0.}, {0.68, 0.}, {0.72, 0.}, {
          0.76, 0.}, {0.8, 0.}, {0.84, 0.}, {0.88, 0.}, {0.92, 0.}, {0.96, 
          0.}}]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
Tsy8hW1MU9B6WRbOivUOWFIecCDpTkSnC3TlHPc6oIrq9xK6k4Ae08ZaC57+
ez8dxqnDnYBKfD5XXUDfCTIvQq9JvI9DH917MP2UoxMaskZokuZjUa8Pr/9e
vtYJ8cEe4wQ3YtGG/0iVstBOENTixjHio9HpGRkH0/ud8N4fZ255Mxo9lvaL
uaTVCZ9uinucRr5DJWl+zyU964SVLJfrek+i0KbcHZeYmE6Yv4l9H+T3Fp2l
EkzUSOsEGtWrBCUB4eiJs00LbUEnFMmSY/cjw1AE1sjDWzuBLqs2ZrLtNWqU
wyOoPNAJPAs1Y7vLoagPpakmxUQnaAx7fOWnCUVbpmZSAr92Apb6nDSzezA6
hzB33jvoBKYKfe9H1UHoaZbOOiFBF9RH+lnNHAWiqCNO2IexC+SoM1JHYwLQ
VvLeXjepLuh/0dwpQ/0SXbAn2bqj3AUso2Av4uGPEkxIn9/T7oLEyI3mwy9+
qFRG02MHmy6wZDdKjy/wRU3OHPsLuHWBJib0mCvHB/WzE8375tcF8t7ql1jz
X6Bt4hW7VnFdcKW2PFCuxxtdSNtmupzRBUrGLkI/FrxQAjIBzEphFxQjHzRJ
iL1Q6bG8IJP2LqBmcK2yfOyBdlinsOpvdsH5KOdX3w3/Qys3bGyMfnaB9Z+W
K0L1rmj2U4nGJwTdgH3kTfiU2RUNtJx6ZM/QDWQkK/9xrzujbqs5BS4c3cDa
a3lkoOOMWpq7Hntc7YY3TkHOR31OqKIZ3ftXmG54S9e49KnBERVfnN8Ike+G
chESgVlxR/S6SYn424fd0HpQdOalpwNKZaT8KcG8GxjfvZt2S7JDR/UDL5aE
dUP24If0XmFrtO2j5tPKuG44U0v7pe/pM7RMl7uuLv0fvsLg/Xz2U/Sddqtu
Z1U37Mxu0UYLWqGvxsPz+lq6geQnh8iktyXqqvn413BfN+wevnPzHrFAddSP
4j7OdkM18/1XCq/MUQVs79rntW4Qbv5JdGn1CSqmFieyvNMNk9j23XrlJyjz
g9uTWyQ9UPf8P7X8y2borKIdI7FAD+hkfgvNPWeCDvdKWpCL9sB8C1NOxhVj
tEX+bDW1dA88VQ4dshE1QtNk87QuavfAUtTVsOe2j9HIzv+y2Y17YHkxU0Y7
ygD1k5Hd537WA4bPkst7mx6hZlKL0QIveoDA+XdZ6WV9VLO1dFk4uAdyyr3I
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
JxMOnt9E4i9RHvz9uw03Bz9mcId9FfkfIa3FvA==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$47461#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 0.96}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Explicit\"", "\"Implicit\"", "\"Trapezoid\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8883003964245358`*^9, 3.888300440189451*^9, 3.888300502248296*^9, {
   3.888300607309363*^9, 3.888300625564928*^9}, {3.8883006822230062`*^9, 
   3.888300687600165*^9}, 3.888300834045388*^9, {3.888300900500276*^9, 
   3.888300922895495*^9}, 3.888301101169915*^9},
 CellLabel->
  "Out[290]=",ExpressionUUID->"2a6d4e83-b023-473d-bc2a-994b0a317305"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"exp", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<./outputs/uloha2_exp_50n.csv\>\"", ",", "\"\<CSV\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imp", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<./outputs/uloha2_imp_50n.csv\>\"", ",", "\"\<CSV\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tra", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<./outputs/uloha2_tra_50n.csv\>\"", ",", "\"\<CSV\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"exp", ",", " ", "imp", ",", " ", "tra"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"exp", ",", " ", "imp", ",", " ", "tra"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Explicit\>\"", ",", " ", "\"\<Implicit\>\"", ",", " ", 
        "\"\<Trapezoid\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "100"}], " ", "t"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "->", "Red"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.888300085660523*^9, 3.888300093541959*^9}, 
   3.888300521111144*^9, {3.88830079824406*^9, 3.888300828010289*^9}, {
   3.888300953315526*^9, 3.8883010921354437`*^9}},
 CellLabel->
  "In[291]:=",ExpressionUUID->"7ac7f5e8-2a6f-453a-b715-27cb228535d8"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxdkCtMA1EQRTfI6tUluGJBN0+CbfUqErAUW3R1DQZsq1chimHDJyEkhUCA
LBAglPLpj49ZNDtv4CTMJJuX+86+mTt3Zmm1ujwVBMFc/sn5v77cehgv9Oob
7lcnqtt/2nWKjXGlExu+Dd/alNqB6/+78ElFbvbM+0N4IW3VyoUjuPY7hs9G
zf2s1DX9T+Ht/HXaOoPrvHP4vK8LM/8SfpCV8glXcPWTwqt+4LXxdwPv1aXh
LVz93sHXxF7t3vh/gOv5CNd90G5RB5j90E6mRc0nuO7bh+s6fbP/M3xa7BRf
4JoH2q34ejX5vMGlWxijE81rAP+WdtnA5DeE+3jKI7iui3beXmNs8p3AT7pS
6ETzfof7dcMPkz/a+XbRJ/wHijAO/A==
          "]]}, {
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQjQo+2FeLrHN/WDXF3i02+31w6FUof4n95ouW9kcL
99jvkGt9Hbhjnb3Sw+r65m+LoPJb7IX0ngje8ei0nzUTBHbaTz965NnjWwVQ
9fvsPQ4Gn5haFWb/JhAkctBe8OgTXoPPtlD9R+wluG7wub1Rtue6vrjAluu4
/cxPiiuk9nJBzTtpn+ZzUCr98kc7zZj+Q181ztiHPBEoLNa6aQcx/5x979ut
C74fO2C3BKj7+uILUP4GO4h9F+1hPjQGg8twPsT+K3D+4a8aQBuuwvkQ91yH
84PAFt6A8yHuuwnnP6wCGXgLzoe49w6cXwhyXsFdOB/i/ntwPgQ8gPMh/kHw
PSAWwPkQ/yH4INti+h+h+fcxnA/xzmM0/z+B8+VBzpF7ihYeCH4aGDxDC5/n
cD7INJF1z9HC6wWc/w1k3NcXaOH3Es4HB4/tK7TwRPDBzmt9jRa+b+D8s2dA
4A1aeL+F88HeFXmHFv4IPti4mPdwPgBN7/zj
          "]]}, {
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxdkD1MwlAUhRtH5s4QN1h1Joy6wtyJRFdxhZmZhQVXmDsxwEICmBgTNBo0
BQJE/v+KuJSZ3tdwXjwnaZrvte/ec85l+iF1d2EYxpX/yPu//hI5076ZZIuJ
80nAFXAtnN8lazZ9r4KfSqI6/d8Au0k5adL9Z3DIKWfioRea9wqOWYWWF+3Q
/Hdwxb/tlD9o3yf4WqlL+7/AbS/qb/gmPw44pRb2yF8fPMnKwAH5HYIfxV5m
RP7H4EA/lEfzbbCA8mmWbVZhSnln4CDOjPLPwRGxE15QH5rvlZbUzwos00x7
RX2twUcZ562pvw1Y1RPfUp+alb38jvp1wW8dkUt978EqrvlL/WtW46wD+ARR
C8hu
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0., 1.}, {0.01, 0.}}], 
         LineBox[{{0.03, 0.}, {0.04, 1.}, {0.05, 0.}}], 
         LineBox[{{0.07, 0.}, {0.08, 1.}, {0.09, 0.}}], 
         LineBox[{{0.11, 0.}, {0.12, 1.}, {0.13, 0.}}], 
         LineBox[{{0.15000000000000002`, 0.}, {0.16, 1.}, {
          0.16999999999999998`, 0.}}], 
         LineBox[{{0.19, 0.}, {0.2, 1.}, {0.21000000000000002`, 0.}}], 
         LineBox[{{0.22999999999999998`, 0.}, {0.24, 1.}, {0.25, 0.}}], 
         LineBox[{{0.27, 0.}, {0.28, 1.}, {0.29000000000000004`, 0.}}], 
         LineBox[{{0.31, 0.}, {0.32, 1.}, {0.33, 0.}}], 
         LineBox[{{0.35, 0.}, {0.36, 1.}, {0.37, 0.}}], 
         LineBox[{{0.39, 0.}, {0.4, 1.}, {0.41000000000000003`, 0.}}], 
         LineBox[{{0.43, 0.}, {0.44, 1.}, {0.45, 0.}}], 
         LineBox[{{0.47, 0.}, {0.48, 1.}, {0.49, 0.}}], 
         LineBox[{{0.51, 0.}, {0.52, 1.}, {0.53, 0.}}], 
         LineBox[{{0.55, 0.}, {0.56, 1.}, {0.5700000000000001, 0.}}], 
         LineBox[{{0.59, 0.}, {0.6, 1.}, {0.61, 0.}}], 
         LineBox[{{0.63, 0.}, {0.64, 1.}, {0.65, 0.}}], 
         LineBox[{{0.67, 0.}, {0.68, 1.}, {0.69, 0.}}], 
         LineBox[{{0.71, 0.}, {0.72, 1.}, {0.73, 0.}}], 
         LineBox[{{0.75, 0.}, {0.76, 1.}, {0.77, 0.}}], 
         LineBox[{{0.79, 0.}, {0.8, 1.}, {0.81, 0.}}], 
         LineBox[{{0.83, 0.}, {0.84, 1.}, {0.85, 0.}}], 
         LineBox[{{0.87, 0.}, {0.88, 1.}, {0.89, 0.}}], 
         LineBox[{{0.91, 0.}, {0.92, 1.}, {0.9299999999999999, 0.}}], 
         LineBox[{{0.95, 0.}, {0.96, 1.}, {0.97, 0.}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQjQo+2FeLrHN/WDXF3i02+31w6FUof4n95ouW9kcL
99jvkGt9Hbhjnb3Sw+r65m+LoPJb7IX0ngje8ei0nzUTBHbaTz965NnjWwVQ
9fvsPQ4Gn5haFWb/JhAkctBe8OgTXoPPtlD9R+wluG7wub1Rtue6vrjAluu4
/cxPiiuk9nJBzTtpn+ZzUCr98kc7zZj+Q181ztiHPBEoLNa6aQcx/5x979ut
C74fO2C3BKj7+uILUP4GO4h9F+1hPjQGg8twPsT+K3D+4a8aQBuuwvkQ91yH
84PAFt6A8yHuuwnnP6wCGXgLzoe49w6cXwhyXsFdOB/i/ntwPgQ8gPMh/kHw
PSAWwPkQ/yH4INti+h+h+fcxnA/xzmM0/z+B8+VBzpF7ihYeCH4aGDxDC5/n
cD7INJF1z9HC6wWc/w1k3NcXaOH3Es4HB4/tK7TwRPDBzmt9jRa+b+D8s2dA
4A1aeL+F88HeFXmHFv4IPti4mPdwPgBN7/zj
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxdkD1MwlAUhRtH5s4QN1h1Joy6wtyJRFdxhZmZhQVXmDsxwEICmBgTNBo0
BQJE/v+KuJSZ3tdwXjwnaZrvte/ec85l+iF1d2EYxpX/yPu//hI5076ZZIuJ
80nAFXAtnN8lazZ9r4KfSqI6/d8Au0k5adL9Z3DIKWfioRea9wqOWYWWF+3Q
/Hdwxb/tlD9o3yf4WqlL+7/AbS/qb/gmPw44pRb2yF8fPMnKwAH5HYIfxV5m
RP7H4EA/lEfzbbCA8mmWbVZhSnln4CDOjPLPwRGxE15QH5rvlZbUzwos00x7
RX2twUcZ562pvw1Y1RPfUp+alb38jvp1wW8dkUt978EqrvlL/WtW46wD+ARR
C8hu
          "]]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
Tsy8hW1MU9B6WRbOivUOWFIecCDpTkSnC3TlHPc6oIrq9xK6k4Ae08ZaC57+
ez8dxqnDnYBKfD5XXUDfCTIvQq9JvI9DH917MP2UoxMaskZokuZjUa8Pr/9e
vtYJ8cEe4wQ3YtGG/0iVstBOENTixjHio9HpGRkH0/ud8N4fZ255Mxo9lvaL
uaTVCZ9uinucRr5DJWl+zyU964SVLJfrek+i0KbcHZeYmE6Yv4l9H+T3Fp2l
EkzUSOsEGtWrBCUB4eiJs00LbUEnFMmSY/cjw1AE1sjDWzuBLqs2ZrLtNWqU
wyOoPNAJPAs1Y7vLoagPpakmxUQnaAx7fOWnCUVbpmZSAr92Apb6nDSzezA6
hzB33jvoBKYKfe9H1UHoaZbOOiFBF9RH+lnNHAWiqCNO2IexC+SoM1JHYwLQ
VvLeXjepLuh/0dwpQ/0SXbAn2bqj3AUso2Av4uGPEkxIn9/T7oLEyI3mwy9+
qFRG02MHmy6wZDdKjy/wRU3OHPsLuHWBJib0mCvHB/WzE8375tcF8t7ql1jz
X6Bt4hW7VnFdcKW2PFCuxxtdSNtmupzRBUrGLkI/FrxQAjIBzEphFxQjHzRJ
iL1Q6bG8IJP2LqBmcK2yfOyBdlinsOpvdsH5KOdX3w3/Qys3bGyMfnaB9Z+W
K0L1rmj2U4nGJwTdgH3kTfiU2RUNtJx6ZM/QDWQkK/9xrzujbqs5BS4c3cDa
a3lkoOOMWpq7Hntc7YY3TkHOR31OqKIZ3ftXmG54S9e49KnBERVfnN8Ike+G
chESgVlxR/S6SYn424fd0HpQdOalpwNKZaT8KcG8GxjfvZt2S7JDR/UDL5aE
dUP24If0XmFrtO2j5tPKuG44U0v7pe/pM7RMl7uuLv0fvsLg/Xz2U/Sddqtu
Z1U37Mxu0UYLWqGvxsPz+lq6geQnh8iktyXqqvn413BfN+wevnPzHrFAddSP
4j7OdkM18/1XCq/MUQVs79rntW4Qbv5JdGn1CSqmFieyvNMNk9j23XrlJyjz
g9uTWyQ9UPf8P7X8y2borKIdI7FAD+hkfgvNPWeCDvdKWpCL9sB8C1NOxhVj
tEX+bDW1dA88VQ4dshE1QtNk87QuavfAUtTVsOe2j9HIzv+y2Y17YHkxU0Y7
ygD1k5Hd537WA4bPkst7mx6hZlKL0QIveoDA+XdZ6WV9VLO1dFk4uAdyyr3I
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
JxMOnt9E4i9RHvz9uw03Bz9mcId9FfkfIa3FvA==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$48040#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 0.98}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Explicit\"", "\"Implicit\"", "\"Trapezoid\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.888300119618965*^9, 3.888300531923623*^9, 3.888300838062376*^9, {
   3.888300960743073*^9, 3.8883010568678293`*^9}, 3.8883011053336973`*^9},
 CellLabel->
  "Out[294]=",ExpressionUUID->"4b8b3231-4345-4903-b175-3dae93ff1c80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"exp", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<./outputs/uloha2_exp_75n.csv\>\"", ",", "\"\<CSV\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imp", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<./outputs/uloha2_imp_75n.csv\>\"", ",", "\"\<CSV\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tra", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<./outputs/uloha2_tra_75n.csv\>\"", ",", "\"\<CSV\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"exp", ",", " ", "imp", ",", " ", "tra"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"exp", ",", " ", "imp", ",", " ", "tra"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Explicit\>\"", ",", " ", "\"\<Implicit\>\"", ",", " ", 
        "\"\<Trapezoid\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "100"}], " ", "t"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "->", "Red"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.888300098402747*^9, 3.888300101725425*^9}, 
   3.888300523964266*^9, {3.888300794678767*^9, 3.8883007956192408`*^9}, {
   3.8883010740341063`*^9, 3.888301087029066*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"93818a1b-ea05-4787-982b-ae74553f1e8e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGDwBmIQjQo+2GdKrvwe4tdt7xab/T449Op+xzntwjP8Zttv
vmhpf7Rwj321yDr3h1VL7JUeVtc3f1u0/2rUjNYyv9X2QnpPBO94dNr7fdyx
Qkxwo/30o0eePb5VsB+ifou9x8HgE1OrwuxXmC9+tvrJdnvBo094DT7b7u/+
3e/T7rfbXoLrBp/bG2X7HXKtrwN37LOf+UlxhdRerv2fFWxd+QQP2qf5HJRK
v/zR7kmT8Y/fRw/ZhzwRKCzWurkPYv4R+963Wxd8P3bATnCZxvRj+seg/A37
mDnkvbY8OW4P8+GsmSBwEs430BZ5Wed3Gs5X6uWak8N8Fs6HuOccnK9+o37u
bLMLcL4C5+8yIcGLcP6bQJAOBH/7rNJj349egvM3nP4wP2/BZTgf4v4rcD40
3OF8+75nJ07pX4Pzua4vLrDlug7nX5NPlNjwBME/F3Dno9r+G2j+vQnnpz4K
c+QpuQXnxwlfkmr2uw3na8b0H/qqcQfO/7LEJyuD+S6c//bqcef7d++ihc89
OL8l3WnykUn34Xy7M3Hb5po9gPOXgFy/GMHnFJWJExB8COe3rb15yrvuIVp4
IviB36YV7Yt4hPBvX8j9n0cRfGMweAznz7wu2J6zAMEXLTj/eTnvE7TwR/Af
7uiZLfUCwY8N9OIIC30K5x/+qgEMIQRfYxb7hhP6z+D8pUZHZVjmPkOLr+dw
fkF105GycgT/jbCD4aYnCH4QOEBfIMI35u8Nlf0IvsnXXa4JOi/R4hfB/29b
8fYS2ys4v+aaaRRfCYL/sArkYQTfXf4zY6Pfa4T/tm/I27MbwYekhzdwfj9D
npj+NASfe6Z2cxbzWzi/EBS9BQj+tYcvtO7eRfCDq5ZNl/B+h5Z+EHy5w8n2
3arvEf6LVlxzbBKCDwA5CWUs
          "]]}, {
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGDwBmIQjQo+2GdKrvwe4tdtv/ipA//W3Nv2jnPahWf4zbbX
dBA5M6PpuH21yDr3h1VL7LcuWSxzRm2L/dWoGa1lfqvtk3xTA2+4LrT3+7hj
hZjgRvtA0eCX6nN6oeq32M8wvi36K6HSfoX54mern2y3F/6QrcJ5KNW++3e/
T7vfbvt6PSkjuaVB9jvkWl8H7thnf/VMFJfHb3v7zwq2rnyCB+0f8maGPEjR
tn/SZPzj99FD9vzX/luemS4ONf+IvQTXDT63N8z2gss0ph/TP2bf+3brgu/H
Ptgxc8h7bXly3H57vF2kYcxdu1kzQeCkfcgTgcJirZN2BtoiL+v8TkPVb7BT
6uWak8N8Fs6HuOccnK9+o37ubLMLcL4C5+8yIcGLcP6bQJAOBH/7rNJj349e
gvM3nP4wP2/BZTgf4v4rcL5bbPb74NCrcL5937MTp/Svwflc1xcX2HJdh/Ov
ySdKbHiC4J8LuPNRbf8NOB/i35twfuqjMEeekltwfpzwJalmv9twvmZM/6Gv
Gnfg/C9LfLIymO/C+W+vHne+f/cuWvjcg/Nb0p0mH5l0H863OxO3ba7ZAzh/
Ccj1ixF8TlGZOAHBh3B+29qbp7zrHqKFJ4If+G1a0b6IRwj/9oXc/3kUwTcG
g8dw/szrgu05CxB80YLzn5fzPkELfwT/4Y6e2VIvEPzYQC+OsNCncP7hrxrA
EELwNWaxbzih/wzOX2p0VIZl7jO0+HoO5xdUNx0pK0fw3wg7GG56guAHgQP0
BSJ8Y/7eUNmP4Jt83eWaoPMSLX4R/P+2FW8vsb2C82uumUbxlSD4D6tAHkbw
3eU/Mzb6vUb4b/uGvD27EXxIengD5/cz5InpT0PwuWdqN2cxv4XzC0HRW4Dg
X3v4QuvuXQQ/uGrZdAnvd2jpB8GXO5xs3636HuG/aMU1xyYh+AD5V6Vo
          "]]}, {
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGDwBmIQjQo+2GdKrvwe4tdtP2smCJy0d5zTLjzDb7Z9tcg6
94dVS+D0n5UfL/kmNdhfjZrRWua32l7XWeb1I7Moe7+PO1aICW60/5jxuGPr
DxOo+i32vW+3Lvh+TMB+hfniZ6ufbLdnXaSeGuT82q77d79Pu99u+5AnAoXF
Wiftdsi1vg7csQ+qfoPdZwVbVz7Bg3D+kybjH7+PHoLzIeYfgfMFl2lMP6Z/
DM5n5pD32vLkOJwP8xeMb6At8rLO7zScr9TLNSeH+SycD3HPOThf/Ub93Nlm
F+B8Bc7fZUKCF+H8N4EgHQj+9lmlx74fvQTnbzj9YX7egsto7r8C57vFZr8P
Dr0K59v3PTtxSv8anM91fXGBLdd1OP+afKLEhicI/rmAOx/V9t9A8+9NOD/1
UZgjT8ktOD9O+JJUs99tOF8zpv/QV407cP6XJT5ZGcx34fy3V4873797Fy18
7sH5LelOk49Mug/n252J2zbX7AGcvwTk+sUIPqeoTJyA4EM4v23tzVPedQ/R
whPBD/w2rWhfxCOEf/tC7v88iuAbg8FjOH/mdcH2nAUIvmjB+c/LeZ+ghT+C
/3BHz2ypFwh+bKAXR1joUzj/8FcNYAgh+Bqz2Dec0H8G5y81OirDMvcZWnw9
h/MLqpuOlJUj+G+EHQw3PUHwg8AB+gIRvjF/b6jsR/BNvu5yTdB5iRa/CP5/
24q3l9hewfk110yj+EoQ/IdVIA8j+O7ynxkb/V4j/Ld9Q96e3Qg+JD28gfP7
GfLE9Kch+NwztZuzmN/C+YWg6C1A8K89fKF19y6CH1y1bLqE9zu09IPgyx1O
tu9WfY/wX7TimmOTEHwAesi3Jg==
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0., 1.}, {0.009999752499938125, 0.}}], 
         LineBox[{{0.0233335, 0.}, {0.026667, 0.111111}, {0.03666675, 0.}}], 
         LineBox[{{0.049999682502075614`, 0.}, {0.053333, 0.012346}, {
          0.06333370250896057, 0.}}], 
         LineBox[{{0.07666614251868052, 0.}, {0.08, 0.001372}, {
          0.09000157244395844, 0.}}], 
         LineBox[{{0.103338973727422, 0.}, {0.106667, 0.000152}, {
          0.11665033004926108`, 0.}}], 
         LineBox[{{0.12999975, 0.}, {0.133333, 0.000017}, {0.1431885652173913,
           0.}}], 
         LineBox[{{0.15666675, 0.}, {0.16, 2.*^-6}, {0.16888866666666666`, 
          0.}}], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCwBWIQzcwh77XlyXF7BiiYNRMETsL5BtoiL+v8TsP5Sr1c
c3KYz8L5O+RaXwfuOAfnq9+onzvb7AKcr8D5u0xI8CKc/yYQpAPB3z6r9Nj3
o5fg/A2nP8zPW3AZzq8WWef+sOoKnO8Wm/0+OPQqnG/f9+zEKf1rcD7X9cUF
tlzX4fxr8okSG54g+OcC7nxU238Dzb834fzUR2GOPCW34Pw44UtSzX634XzN
mP5DXzXuwPlflvhkZTDfhfPfXj3ufP/uXbTwuQfnt6Q7TT4y6T6cb3cmbttc
swdw/hKQ6xcj+JyiMnECgg/h/La1N0951z1EC08EP/DbtKJ9EY8Q/u0Luf/z
KIJvDAaP4fyZ1wXbcxYg+KIF5z8v532CFv4I/sMdPbOlXiD4sYFeHGGhT+H8
w181gCGE4GvMYt9wQv8ZnL/U6KgMy9xnaPH1HM4vqG46UlaO4L8RdjDc9ATB
DwIH6AtE+Mb8vaGyH8E3+brLNUHnJVr8Ivj/bSveXmJ7BefXXDON4itB8B9W
gTyM4LvLf2Zs9HuN8N/2DXl7diP4kPTwBs7vZ8gT05+G4HPP1G7OYn4L5xeC
orcAwb/28IXW3bsIfnDVsukS3u/Q0g+CL3c42b5b9T3Cf9GKa45NQvABV/35
IQ==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGDwBmIQjQo+2GdKrvwe4tdtv/ipA//W3Nv2jnPahWf4zbbX
dBA5M6PpuH21yDr3h1VL7LcuWSxzRm2L/dWoGa1lfqvtk3xTA2+4LrT3+7hj
hZjgRvtA0eCX6nN6oeq32M8wvi36K6HSfoX54mern2y3F/6QrcJ5KNW++3e/
T7vfbvt6PSkjuaVB9jvkWl8H7thnf/VMFJfHb3v7zwq2rnyCB+0f8maGPEjR
tn/SZPzj99FD9vzX/luemS4ONf+IvQTXDT63N8z2gss0ph/TP2bf+3brgu/H
Ptgxc8h7bXly3H57vF2kYcxdu1kzQeCkfcgTgcJirZN2BtoiL+v8TkPVb7BT
6uWak8N8Fs6HuOccnK9+o37ubLMLcL4C5+8yIcGLcP6bQJAOBH/7rNJj349e
gvM3nP4wP2/BZTgf4v4rcL5bbPb74NCrcL5937MTp/Svwflc1xcX2HJdh/Ov
ySdKbHiC4J8LuPNRbf8NOB/i35twfuqjMEeekltwfpzwJalmv9twvmZM/6Gv
Gnfg/C9LfLIymO/C+W+vHne+f/cuWvjcg/Nb0p0mH5l0H863OxO3ba7ZAzh/
Ccj1ixF8TlGZOAHBh3B+29qbp7zrHqKFJ4If+G1a0b6IRwj/9oXc/3kUwTcG
g8dw/szrgu05CxB80YLzn5fzPkELfwT/4Y6e2VIvEPzYQC+OsNCncP7hrxrA
EELwNWaxbzih/wzOX2p0VIZl7jO0+HoO5xdUNx0pK0fw3wg7GG56guAHgQP0
BSJ8Y/7eUNmP4Jt83eWaoPMSLX4R/P+2FW8vsb2C82uumUbxlSD4D6tAHkbw
3eU/Mzb6vUb4b/uGvD27EXxIengD5/cz5InpT0PwuWdqN2cxv4XzC0HRW4Dg
X3v4QuvuXQQ/uGrZdAnvd2jpB8GXO5xs3636HuG/aMU1xyYh+AD5V6Vo
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGDwBmIQjQo+2GdKrvwe4tdtP2smCJy0d5zTLjzDb7Z9tcg6
94dVS+D0n5UfL/kmNdhfjZrRWua32l7XWeb1I7Moe7+PO1aICW60/5jxuGPr
DxOo+i32vW+3Lvh+TMB+hfniZ6ufbLdnXaSeGuT82q77d79Pu99u+5AnAoXF
Wiftdsi1vg7csQ+qfoPdZwVbVz7Bg3D+kybjH7+PHoLzIeYfgfMFl2lMP6Z/
DM5n5pD32vLkOJwP8xeMb6At8rLO7zScr9TLNSeH+SycD3HPOThf/Ub93Nlm
F+B8Bc7fZUKCF+H8N4EgHQj+9lmlx74fvQTnbzj9YX7egsto7r8C57vFZr8P
Dr0K59v3PTtxSv8anM91fXGBLdd1OP+afKLEhicI/rmAOx/V9t9A8+9NOD/1
UZgjT8ktOD9O+JJUs99tOF8zpv/QV407cP6XJT5ZGcx34fy3V4873797Fy18
7sH5LelOk49Mug/n252J2zbX7AGcvwTk+sUIPqeoTJyA4EM4v23tzVPedQ/R
whPBD/w2rWhfxCOEf/tC7v88iuAbg8FjOH/mdcH2nAUIvmjB+c/LeZ+ghT+C
/3BHz2ypFwh+bKAXR1joUzj/8FcNYAgh+Bqz2Dec0H8G5y81OirDMvcZWnw9
h/MLqpuOlJUj+G+EHQw3PUHwg8AB+gIRvjF/b6jsR/BNvu5yTdB5iRa/CP5/
24q3l9hewfk110yj+EoQ/IdVIA8j+O7ynxkb/V4j/Ld9Q96e3Qg+JD28gfP7
GfLE9Kch+NwztZuzmN/C+YWg6C1A8K89fKF19y6CH1y1bLqE9zu09IPgyx1O
tu9WfY/wX7TimmOTEHwAesi3Jg==
          "]]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
Tsy8hW1MU9B6WRbOivUOWFIecCDpTkSnC3TlHPc6oIrq9xK6k4Ae08ZaC57+
ez8dxqnDnYBKfD5XXUDfCTIvQq9JvI9DH917MP2UoxMaskZokuZjUa8Pr/9e
vtYJ8cEe4wQ3YtGG/0iVstBOENTixjHio9HpGRkH0/ud8N4fZ255Mxo9lvaL
uaTVCZ9uinucRr5DJWl+zyU964SVLJfrek+i0KbcHZeYmE6Yv4l9H+T3Fp2l
EkzUSOsEGtWrBCUB4eiJs00LbUEnFMmSY/cjw1AE1sjDWzuBLqs2ZrLtNWqU
wyOoPNAJPAs1Y7vLoagPpakmxUQnaAx7fOWnCUVbpmZSAr92Apb6nDSzezA6
hzB33jvoBKYKfe9H1UHoaZbOOiFBF9RH+lnNHAWiqCNO2IexC+SoM1JHYwLQ
VvLeXjepLuh/0dwpQ/0SXbAn2bqj3AUso2Av4uGPEkxIn9/T7oLEyI3mwy9+
qFRG02MHmy6wZDdKjy/wRU3OHPsLuHWBJib0mCvHB/WzE8375tcF8t7ql1jz
X6Bt4hW7VnFdcKW2PFCuxxtdSNtmupzRBUrGLkI/FrxQAjIBzEphFxQjHzRJ
iL1Q6bG8IJP2LqBmcK2yfOyBdlinsOpvdsH5KOdX3w3/Qys3bGyMfnaB9Z+W
K0L1rmj2U4nGJwTdgH3kTfiU2RUNtJx6ZM/QDWQkK/9xrzujbqs5BS4c3cDa
a3lkoOOMWpq7Hntc7YY3TkHOR31OqKIZ3ftXmG54S9e49KnBERVfnN8Ike+G
chESgVlxR/S6SYn424fd0HpQdOalpwNKZaT8KcG8GxjfvZt2S7JDR/UDL5aE
dUP24If0XmFrtO2j5tPKuG44U0v7pe/pM7RMl7uuLv0fvsLg/Xz2U/Sddqtu
Z1U37Mxu0UYLWqGvxsPz+lq6geQnh8iktyXqqvn413BfN+wevnPzHrFAddSP
4j7OdkM18/1XCq/MUQVs79rntW4Qbv5JdGn1CSqmFieyvNMNk9j23XrlJyjz
g9uTWyQ9UPf8P7X8y2borKIdI7FAD+hkfgvNPWeCDvdKWpCL9sB8C1NOxhVj
tEX+bDW1dA88VQ4dshE1QtNk87QuavfAUtTVsOe2j9HIzv+y2Y17YHkxU0Y7
ygD1k5Hd537WA4bPkst7mx6hZlKL0QIveoDA+XdZ6WV9VLO1dFk4uAdyyr3I
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
JxMOnt9E4i9RHvz9uw03Bz9mcId9FfkfIa3FvA==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$48453#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 0.986667}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Explicit\"", "\"Implicit\"", "\"Trapezoid\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.888300129505383*^9, 3.888300538451519*^9, 
  3.8883008407229433`*^9, 3.888301107822073*^9},
 CellLabel->
  "Out[298]=",ExpressionUUID->"775754ff-643a-41bc-9fb7-2fb03f9be422"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"exp", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<./outputs/uloha2_exp_100n.csv\>\"", ",", "\"\<CSV\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imp", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<./outputs/uloha2_imp_100n.csv\>\"", ",", "\"\<CSV\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tra", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<./outputs/uloha2_tra_100n.csv\>\"", ",", "\"\<CSV\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{"-", "100"}], " ", 
       RowBox[{"x", "[", "t", "]"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "==", "1"}]}], "}"}], ",", "x", ",", 
   "t"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"exp", ",", " ", "imp", ",", " ", "tra"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"exp", ",", " ", "imp", ",", " ", "tra"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Explicit\>\"", ",", " ", "\"\<Implicit\>\"", ",", " ", 
        "\"\<Trapezoid\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "100"}], " ", "t"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "->", "Red"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.888300106782634*^9, 3.8883001163138866`*^9}, 
   3.88830052779105*^9, {3.888300744962283*^9, 3.888300763653767*^9}, {
   3.888300853623938*^9, 3.8883008647307377`*^9}, 3.8883010793568773`*^9},
 CellLabel->
  "In[299]:=",ExpressionUUID->"07c7b71e-817a-46a5-b408-23f99bafc345"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "100"}], " ", "t"}]]}], "]"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.888300546198988*^9, {3.888300753212955*^9, 3.888300765508985*^9}, 
   3.8883008735101*^9, 3.888301110480668*^9},
 CellLabel->
  "Out[302]=",ExpressionUUID->"ee66fc4b-2515-45df-b41b-3badef2d4423"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxdkj1IQlEYhqXR2dlos7lZGmvV2SmqNVttzdmlpYYWXVqEIMggorLoB43K
6lpZef29eq/aYnOec+k79BwQea7e7+d9zszSWnxlKhAILE8+6vv/+Z7fCOUX
7NTm/N8Tn7eEC+G0Gyvs4vec8M62Onv4f17Yi6kn+3j/QDhoZZPR4CHqHQnP
JjLn48gx6p8I5yZvW9lT9DsTntOniP4XwsVxZNLhEvNcCcd1w2vMdyNsp1TB
W8xbEl5X4yXLmP9O2D/32Mfwom7wgP0Mq26JzCP2rQjrdawK9n8SnlbjhJ+R
h+FVfV6QjyWsqoXyFvKqCv+ocuMq8nsV1vFE35CnYT1e+h351oTLJXVqyPtD
WK8b+kT+hnW5xBd81LFPHX7q2K8OXzb2teHPxv4N+Gwgjwb8NpFPE76byKsF
/y3kZ9i/D23kadi/H23k28F96SBvw/796SJ/w/596sKHAx8OfDjw4cBHDz56
8NGDjz589OGjDx8ufLjw4cKHBx8efHjwMYCPAXwM4GMIH0P4GMLHCD5G8GH4
F1tCjqU=
          "]]}, {
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxdkjtIW1EYx6NjFh3iqJItTg7O3lO61EVoAi4SEIotdFKHDtqhSx2Lgl3a
QQLJ4hIiKKYgNjVt1RLFPtL04ePexLxfLlHQQXPO93kO/g+E8LvJ/R7/3/E+
mQo87XS5XJPtj/y+f87FS0/0kTP3WhDbzG+ZD0W8b77qjy8zJ/j3CHNMvH8n
zwpziP8fZV4UNb98sir8Vw93Z29e8ftrzFPCnQlPD7s3mCe43gdRWOpJpjse
i4HgwnbLtynSqXH3yLXg+lvMgyLSfjsTTjD3c79PzF1iSJ2k8Fqx3McHLu7/
WTzvHRvtftG0ki1fu8MX8aa+Hrr8als0zw7zoRVQDXeZExbNt8ccs5w5WfCb
Zpo3pXlGjje9r5nmP9B8l/Md0z6GR1SD75ppP8OyW3Dhh2ba96dmtU7GMO3/
S3O/HKcvrZnyMPxMnd+aKZ+MZlnNEzVMef3RfCHLtQxTfn81q3iG/0GehtV4
8/8h3yPN+yl5jiDvY81qXc8J5G9YlQuegg8b9rHBjw372eDLgX0d8OfA/lnw
mYU8suA3B/nkwHcO8joD/2eQn2G6D3nI0zDdjzzkW4D7UoC8DdP9KUL+huk+
FcFHCXyUwEcJfJTARxl8lMFHGXxUwEcFfFTARxV8VMFHFXzUwEcNfNTARx18
1MFHHXw0wEcDfDTARxN8NMGH4VtvkYFk
          "]]}, {
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxdkj1MU1EYhhvGJhAxHQwDBlyAgZg4MbTfhh1cAHWqCwEcGGzDVgYHZXAw
LBqDAzGUAZZGIwRMgFCh/BggYMVbsGpveyn9uW39SWG155yb78T3JE3z3PZ+
P+9z2gYf9Q83uFyuofpHfP9/ftG4J3rbDD+l3gej1YF7xw6/oPdHPRQPrdBy
60Spb3ma2s3xx08uZpzfZ+lqt9Wc8j+j11PizNOr+GYuexp0/h8lf2xg52X4
Ptl94sk7ao5bjTf/ep33F+iaO9nUa98gtxEJet1LNPWnba5l1e3U+0Ajd2It
DxO/fZ2ByY+1jhW6a10JjXWd+FT9NXpeXnxzubXum62/bUTWHX7rU/1izLfk
2WBW/TeZN2od9Q5xZjXPNnO/bLjDrObbZTbDouAnZjXvHnNIjBfcZ1bzHzAr
D4fMah/NftngCPbTLLoFJj/DvglmuY6RgP2/MF8X47QeQx6aR+T5CvkYzKKa
J2pAXknmC1GuloT8TphlPN5TyFOzHG/iG+SbYt7fEycFeX9nlut6fkD+mmW5
wE/wkYZ90uAnDfulwZcJ+5rgz4T9M+AzA3lkwG8W8smC7yzkZYF/C/LTrO7D
GeSpWd2PM8g3B/clB3lrVvfnHPLXrO7TOfjIg488+MiDjzz4KICPAvgogI8i
+CiCjyL4KIGPEvgogQ8bfNjgwwYfZfBRBh9l8FEBHxXwUQEfVfBRBR+a/wFm
9Jo0
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxdkj1IQlEYhqXR2dlos7lZGmvV2SmqNVttzdmlpYYWXVqEIMggorLoB43K
6lpZef29eq/aYnOec+k79BwQea7e7+d9zszSWnxlKhAILE8+6vv/+Z7fCOUX
7NTm/N8Tn7eEC+G0Gyvs4vec8M62Onv4f17Yi6kn+3j/QDhoZZPR4CHqHQnP
JjLn48gx6p8I5yZvW9lT9DsTntOniP4XwsVxZNLhEvNcCcd1w2vMdyNsp1TB
W8xbEl5X4yXLmP9O2D/32Mfwom7wgP0Mq26JzCP2rQjrdawK9n8SnlbjhJ+R
h+FVfV6QjyWsqoXyFvKqCv+ocuMq8nsV1vFE35CnYT1e+h351oTLJXVqyPtD
WK8b+kT+hnW5xBd81LFPHX7q2K8OXzb2teHPxv4N+Gwgjwb8NpFPE76byKsF
/y3kZ9i/D23kadi/H23k28F96SBvw/796SJ/w/596sKHAx8OfDjw4cBHDz56
8NGDjz589OGjDx8ufLjw4cKHBx8efHjwMYCPAXwM4GMIH0P4GMLHCD5G8GH4
F1tCjqU=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxdkjtIW1EYx6NjFh3iqJItTg7O3lO61EVoAi4SEIotdFKHDtqhSx2Lgl3a
QQLJ4hIiKKYgNjVt1RLFPtL04ePexLxfLlHQQXPO93kO/g+E8LvJ/R7/3/E+
mQo87XS5XJPtj/y+f87FS0/0kTP3WhDbzG+ZD0W8b77qjy8zJ/j3CHNMvH8n
zwpziP8fZV4UNb98sir8Vw93Z29e8ftrzFPCnQlPD7s3mCe43gdRWOpJpjse
i4HgwnbLtynSqXH3yLXg+lvMgyLSfjsTTjD3c79PzF1iSJ2k8Fqx3McHLu7/
WTzvHRvtftG0ki1fu8MX8aa+Hrr8als0zw7zoRVQDXeZExbNt8ccs5w5WfCb
Zpo3pXlGjje9r5nmP9B8l/Md0z6GR1SD75ppP8OyW3Dhh2ba96dmtU7GMO3/
S3O/HKcvrZnyMPxMnd+aKZ+MZlnNEzVMef3RfCHLtQxTfn81q3iG/0GehtV4
8/8h3yPN+yl5jiDvY81qXc8J5G9YlQuegg8b9rHBjw372eDLgX0d8OfA/lnw
mYU8suA3B/nkwHcO8joD/2eQn2G6D3nI0zDdjzzkW4D7UoC8DdP9KUL+huk+
FcFHCXyUwEcJfJTARxl8lMFHGXxUwEcFfFTARxV8VMFHFXzUwEcNfNTARx18
1MFHHXw0wEcDfDTARxN8NMGH4VtvkYFk
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxdkj1MU1EYhhvGJhAxHQwDBlyAgZg4MbTfhh1cAHWqCwEcGGzDVgYHZXAw
LBqDAzGUAZZGIwRMgFCh/BggYMVbsGpveyn9uW39SWG155yb78T3JE3z3PZ+
P+9z2gYf9Q83uFyuofpHfP9/ftG4J3rbDD+l3gej1YF7xw6/oPdHPRQPrdBy
60Spb3ma2s3xx08uZpzfZ+lqt9Wc8j+j11PizNOr+GYuexp0/h8lf2xg52X4
Ptl94sk7ao5bjTf/ep33F+iaO9nUa98gtxEJet1LNPWnba5l1e3U+0Ajd2It
DxO/fZ2ByY+1jhW6a10JjXWd+FT9NXpeXnxzubXum62/bUTWHX7rU/1izLfk
2WBW/TeZN2od9Q5xZjXPNnO/bLjDrObbZTbDouAnZjXvHnNIjBfcZ1bzHzAr
D4fMah/NftngCPbTLLoFJj/DvglmuY6RgP2/MF8X47QeQx6aR+T5CvkYzKKa
J2pAXknmC1GuloT8TphlPN5TyFOzHG/iG+SbYt7fEycFeX9nlut6fkD+mmW5
wE/wkYZ90uAnDfulwZcJ+5rgz4T9M+AzA3lkwG8W8smC7yzkZYF/C/LTrO7D
GeSpWd2PM8g3B/clB3lrVvfnHPLXrO7TOfjIg488+MiDjzz4KICPAvgogI8i
+CiCjyL4KIGPEvgogQ8bfNjgwwYfZfBRBh9l8FEBHxXwUQEfVfBRBR+a/wFm
9Jo0
          "]]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
Tsy8hW1MU9B6WRbOivUOWFIecCDpTkSnC3TlHPc6oIrq9xK6k4Ae08ZaC57+
ez8dxqnDnYBKfD5XXUDfCTIvQq9JvI9DH917MP2UoxMaskZokuZjUa8Pr/9e
vtYJ8cEe4wQ3YtGG/0iVstBOENTixjHio9HpGRkH0/ud8N4fZ255Mxo9lvaL
uaTVCZ9uinucRr5DJWl+zyU964SVLJfrek+i0KbcHZeYmE6Yv4l9H+T3Fp2l
EkzUSOsEGtWrBCUB4eiJs00LbUEnFMmSY/cjw1AE1sjDWzuBLqs2ZrLtNWqU
wyOoPNAJPAs1Y7vLoagPpakmxUQnaAx7fOWnCUVbpmZSAr92Apb6nDSzezA6
hzB33jvoBKYKfe9H1UHoaZbOOiFBF9RH+lnNHAWiqCNO2IexC+SoM1JHYwLQ
VvLeXjepLuh/0dwpQ/0SXbAn2bqj3AUso2Av4uGPEkxIn9/T7oLEyI3mwy9+
qFRG02MHmy6wZDdKjy/wRU3OHPsLuHWBJib0mCvHB/WzE8375tcF8t7ql1jz
X6Bt4hW7VnFdcKW2PFCuxxtdSNtmupzRBUrGLkI/FrxQAjIBzEphFxQjHzRJ
iL1Q6bG8IJP2LqBmcK2yfOyBdlinsOpvdsH5KOdX3w3/Qys3bGyMfnaB9Z+W
K0L1rmj2U4nGJwTdgH3kTfiU2RUNtJx6ZM/QDWQkK/9xrzujbqs5BS4c3cDa
a3lkoOOMWpq7Hntc7YY3TkHOR31OqKIZ3ftXmG54S9e49KnBERVfnN8Ike+G
chESgVlxR/S6SYn424fd0HpQdOalpwNKZaT8KcG8GxjfvZt2S7JDR/UDL5aE
dUP24If0XmFrtO2j5tPKuG44U0v7pe/pM7RMl7uuLv0fvsLg/Xz2U/Sddqtu
Z1U37Mxu0UYLWqGvxsPz+lq6geQnh8iktyXqqvn413BfN+wevnPzHrFAddSP
4j7OdkM18/1XCq/MUQVs79rntW4Qbv5JdGn1CSqmFieyvNMNk9j23XrlJyjz
g9uTWyQ9UPf8P7X8y2borKIdI7FAD+hkfgvNPWeCDvdKWpCL9sB8C1NOxhVj
tEX+bDW1dA88VQ4dshE1QtNk87QuavfAUtTVsOe2j9HIzv+y2Y17YHkxU0Y7
ygD1k5Hd537WA4bPkst7mx6hZlKL0QIveoDA+XdZ6WV9VLO1dFk4uAdyyr3I
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
JxMOnt9E4i9RHvz9uw03Bz9mcId9FfkfIa3FvA==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$48947#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 0.99}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Explicit\"", "\"Implicit\"", "\"Trapezoid\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.888300546198988*^9, {3.888300753212955*^9, 3.888300765508985*^9}, 
   3.8883008735101*^9, 3.888301110575832*^9},
 CellLabel->
  "Out[303]=",ExpressionUUID->"b5f2037f-a784-4b3a-9a69-20aa8a1642f8"]
}, Open  ]]
}, Closed]]
},
WindowSize->{941, 671},
WindowMargins->{{0, Automatic}, {Automatic, 21}},
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"552d3070-2477-43ff-8647-3bb3b1eb0c01"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 202, 4, 37, "Input",ExpressionUUID->"a40447b7-45ea-43e5-b3e8-ed43f9303478"],
Cell[CellGroupData[{
Cell[785, 28, 151, 3, 84, "Section",ExpressionUUID->"d5b95acb-0c3f-4f74-84a1-becabebfedb9"],
Cell[CellGroupData[{
Cell[961, 35, 2228, 58, 350, "Input",ExpressionUUID->"ed466cef-859a-4f4a-b520-b63b5870a632"],
Cell[3192, 95, 47223, 798, 306, "Output",ExpressionUUID->"22dbe27c-9e7a-4ace-9d99-e5d0a20cd2bf"]
}, Open  ]],
Cell[50430, 896, 181, 3, 44, "Text",ExpressionUUID->"c8373909-05e4-4d45-b444-892d2f1e9bee"],
Cell[50614, 901, 47262, 800, 301, "Input",ExpressionUUID->"1b2f7797-b9fb-4765-b3e0-553a06901f8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97913, 1706, 156, 3, 84, "Section",ExpressionUUID->"d3b0d75d-eb9c-4099-84aa-05643f99424b"],
Cell[CellGroupData[{
Cell[98094, 1713, 2578, 62, 246, "Input",ExpressionUUID->"9d12b1d4-f9e3-473f-988f-2f8739c512a2"],
Cell[100675, 1777, 35730, 673, 320, "Output",ExpressionUUID->"2a6d4e83-b023-473d-bc2a-994b0a317305"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136442, 2455, 2060, 55, 272, "Input",ExpressionUUID->"7ac7f5e8-2a6f-453a-b715-27cb228535d8"],
Cell[138505, 2512, 35776, 677, 315, "Output",ExpressionUUID->"4b8b3231-4345-4903-b175-3dae93ff1c80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174318, 3194, 2063, 55, 272, "Input",ExpressionUUID->"93818a1b-ea05-4787-982b-ae74553f1e8e"],
Cell[176384, 3251, 38023, 715, 317, "Output",ExpressionUUID->"775754ff-643a-41bc-9fb7-2fb03f9be422"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214444, 3971, 2466, 68, 298, "Input",ExpressionUUID->"07c7b71e-817a-46a5-b408-23f99bafc345"],
Cell[216913, 4041, 511, 15, 46, "Output",ExpressionUUID->"ee66fc4b-2515-45df-b41b-3badef2d4423"],
Cell[217427, 4058, 36065, 684, 318, "Output",ExpressionUUID->"b5f2037f-a784-4b3a-9a69-20aa8a1642f8"]
}, Open  ]]
}, Closed]]
}
]
*)

